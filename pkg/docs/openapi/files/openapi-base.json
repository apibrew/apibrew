{
  "openapi": "3.0.0",
  "info": {
    "contact": {
      "name": "API Brew"
    },
    "description": "OpenApi 3.0 definition for API Brew Rest API",
    "license": {
      "name": "Apache License",
      "url": "https://github.com/google/gnostic/blob/master/LICENSE"
    },
    "title": "API Brew",
    "version": "1.0"
  },
  "paths": {
    "/resources": {
      "get": {
        "description": "The access token is used to authenticate the user for all the endpoints which needs authentication.",
        "operationId": "getResources",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "content": {
                      "items": {
                        "$ref": "#/components/schemas/SystemResource"
                      },
                      "type": "array"
                    },
                    "total": {
                      "type": "integer"
                    }
                  },
                  "required": [
                    "content"
                  ]
                }
              }
            },
            "description": "List of Resources"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "Bad Request"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "Unauthorized"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "summary": "This endpoint is used to get the list of Resources.",
        "tags": [
          "Resources"
        ]
      },
      "post": {
        "description": "The access token is used to authenticate the user for all the endpoints which needs authentication.",
        "operationId": "createResource",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SystemResource"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SystemResource"
                }
              }
            },
            "description": "Created resource"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "Bad Request"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "Unauthorized"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "summary": "This endpoint is used to create a new resource.",
        "tags": [
          "Resources"
        ]
      }
    },
    "/resources/by-name/{namespace}/{name}": {
      "get": {
        "description": "The access token is used to authenticate the user for all the endpoints which needs authentication.",
        "operationId": "getResourceByName",
        "parameters": [
          {
            "in": "path",
            "name": "namespace",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "name",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SystemResource"
                }
              }
            },
            "description": "Resource"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "summary": "This endpoint is used to get a resource by name.",
        "tags": [
          "Resources"
        ]
      }
    },
    "/resources/{id}": {
      "delete": {
        "description": "The access token is used to authenticate the user for all the endpoints which needs authentication.",
        "operationId": "deleteResource",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": null,
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "summary": "This endpoint is used to delete a resource.",
        "tags": [
          "Resources"
        ]
      },
      "get": {
        "description": "The access token is used to authenticate the user for all the endpoints which needs authentication.",
        "operationId": "getResource",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SystemResource"
                }
              }
            },
            "description": "Resource"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "Bad Request"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "Unauthorized"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "summary": "This endpoint is used to get a resource.",
        "tags": [
          "Resources"
        ]
      },
      "put": {
        "description": "The access token is used to authenticate the user for all the endpoints which needs authentication.",
        "operationId": "updateResource",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SystemResource"
              }
            }
          },
          "required": true
        },
        "responses": null,
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "summary": "This endpoint is used to update a resource.",
        "tags": [
          "Resources"
        ]
      }
    },
    "/authentication/token": {
      "get": {
        "description": "The access token is used to authenticate the user for all the endpoints which needs authentication.",
        "operationId": "ViewToken",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ViewTokenResponse"
                }
              }
            },
            "description": "Authentication Response"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "Bad Request"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "Unauthorized"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "summary": "This endpoint is used to view the content of the access token.",
        "tags": [
          "Authentication"
        ]
      },
      "post": {
        "description": "The access token is used to authenticate the user for all the endpoints which needs authentication.",
        "operationId": "getAuthenticationToken",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AuthenticationRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AuthenticationResponse"
                }
              }
            },
            "description": "Authentication Response"
          },
          "400": {
            "content": {
              "application/json": {
                "example": {
                  "code": "RECORD_VALIDATION_ERROR",
                  "message": "json: cannot unmarshal number into Go struct field AuthenticationRequest.password of type string"
                }
              }
            },
            "description": "Unauthorized"
          },
          "401": {
            "content": {
              "application/json": {
                "example": {
                  "code": "AUTHENTICATION_FAILED",
                  "message": "Authentication failed"
                }
              }
            },
            "description": "Unauthorized"
          }
        },
        "summary": "This endpoint is used to authenticate the user and get the access token.",
        "tags": [
          "Authentication"
        ]
      },
      "put": {
        "description": "The access token is used to authenticate the user for all the endpoints which needs authentication.",
        "operationId": "refreshAuthenticationToken",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RefreshTokenRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RefreshTokenResponse"
                }
              }
            },
            "description": "Authentication Response"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "Bad Request"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "Unauthorized"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "summary": "This endpoint is used to refresh the access token.",
        "tags": [
          "Authentication"
        ]
      }
    },
    "/{resourceRestPath}": {
      "get": {
        "description": "List {title}. This endpoint is used to list all the {title}.",
        "operationId": "list{schemaName}",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "content": {
                      "items": {
                        "$ref": "#/components/schemas/{schemaName}"
                      },
                      "type": "array"
                    },
                    "total": {
                      "type": "integer"
                    }
                  },
                  "required": [
                    "content"
                  ]
                }
              }
            },
            "description": "List of items"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "summary": "Generic Record - List items",
        "tags": [
          "{tag}"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "limit",
            "description": "Limit",
            "required": false,
            "schema": {
              "type": "number"
            }
          },
          {
            "in": "query",
            "name": "offset",
            "description": "Offset",
            "required": false,
            "schema": {
              "type": "number"
            }
          },
          {
            "in": "query",
            "name": "resolve-references",
            "description": "Resolve references. It is a comma separated list of reference properties. Example: $.property1,$.property2",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ]
      },
      "parameters": [
      ],
      "patch": {
        "description": "A generic record resource. All Apis are extended from Generic Record resource - Apply an item, it will check id and unique properties, if such item is exists, update operation will be executed, if not create operation is executed. If There are no change between updating record and existing record, nothing will be done",
        "operationId": "apply{schemaName}",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/{schemaName}"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/{schemaName}"
                }
              }
            },
            "description": "Updated item"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "summary": "Generic Record - Apply an item",
        "tags": [
          "{tag}"
        ]
      },
      "post": {
        "description": "A generic record resource. All Apis are extended from Generic Record resource - Create new item",
        "operationId": "create{schemaName}",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/{schemaName}"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/{schemaName}"
                }
              }
            },
            "description": "Created item"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "summary": "Generic Record - Create new item",
        "tags": [
          "{tag}"
        ]
      },
      "summary": "Generic Record"
    },
    "/{resourceRestPath}/{id}": {
      "delete": {
        "description": "A generic record resource. All Apis are extended from Generic Record resource - Delete item",
        "operationId": "delete{schemaName}",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Deleted item"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "summary": "Generic Record - Delete item",
        "tags": [
          "{tag}"
        ]
      },
      "description": "A generic record resource. All Apis are extended from Generic Record resource",
      "get": {
        "description": "A generic record resource. All Apis are extended from Generic Record resource - Get item",
        "operationId": "get{schemaName}",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/{schemaName}"
                }
              }
            },
            "description": "Get item"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "summary": "Generic Record - Get item",
        "tags": [
          "{tag}"
        ]
      },
      "parameters": [
      ],
      "put": {
        "description": "A generic record resource. All Apis are extended from Generic Record resource - Update item",
        "operationId": "update{schemaName}",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/{schemaName}"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/{schemaName}"
                }
              }
            },
            "description": "Updated item"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "summary": "Generic Record - Update item",
        "tags": [
          "{tag}"
        ]
      },
      "summary": "Generic Record"
    },
    "/{resourceRestPath}/{id}/_search": {
      "description": "A generic record resource. All Apis are extended from Generic Record resource - Search",
      "parameters": [
      ],
      "post": {
        "description": "A generic record resource. All Apis are extended from Generic Record resource - Search items",
        "operationId": "search{schemaName}",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SearchRecordRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "content": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/{schemaName}"
                      }
                    }
                  }
                }
              }
            },
            "description": "List of items"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "summary": "Generic Record - Search items",
        "tags": [
          "{tag}"
        ]
      },
      "summary": "Generic Record - Search"
    },
    "/{resourceRestPath}/{id}/_load": {
      "description": "A generic record resource. All Apis are extended from Generic Record resource - Search",
      "parameters": [
      ],
      "post": {
        "description": "Load Api is to locate resource. To locate a record, you need to provide a unique property value",
        "operationId": "load{schemaName}",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/{schemaName}"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "content": {
                      "$ref": "#/components/schemas/{schemaName}"
                    }
                  }
                }
              }
            },
            "description": "List of items"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "summary": "Generic Record - Search items",
        "tags": [
          "{tag}"
        ]
      },
      "summary": "Generic Record - Search"
    },
    "/{resourceRestPath}/{id}/_watch": {
      "description": "A generic record resource. All Apis are extended from Generic Record resource - Search",
      "parameters": [
      ],
      "get": {
        "description": "Watch Api is to watch resource. To watch a record, you need to provide a search query",
        "operationId": "watch{schemaName}",
        "responses": {
          "200": {
            "content": {
            },
            "description": "List of events"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "summary": "Generic Record - Search items",
        "tags": [
          "{tag}"
        ]
      },
      "summary": "Generic Record - Search"
    },
    "/{resourceRestPath}/{id}/_resource": {
      "description": "A generic record resource. All Apis are extended from Generic Record resource - Search",
      "parameters": [
      ],
      "get": {
        "description": "A generic record resource. All Apis are extended from Generic Record resource - Search items",
        "operationId": "search{schemaName}",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "content": {
                      "$ref": "#/components/schemas/SystemResource"
                    }
                  }
                }
              }
            },
            "description": "List of items"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "summary": "Generic Record - Search items",
        "tags": [
          "{tag}"
        ]
      },
      "summary": "Generic Record - Search"
    }
  },
  "components": {
    "schemas": {
      "AuthenticationRequest": {
        "properties": {
          "username": {
            "example": "admin",
            "type": "string"
          },
          "password": {
            "example": "admin",
            "type": "string"
          },
          "term": {
            "$ref": "#/components/schemas/TokenTerm"
          }
        },
        "required": [
          "username",
          "password"
        ]
      },
      "AuthenticationResponse": {
        "properties": {
          "token": {
            "$ref": "#/components/schemas/Token"
          }
        },
        "required": [
          "token"
        ]
      },
      "BooleanExpression": {
        "type": "object"
      },
      "Error": {
        "properties": {
          "code": {
            "type": "string"
          },
          "details": {
            "type": "object"
          },
          "message": {
            "type": "string"
          }
        },
        "required": [
          "code",
          "message"
        ]
      },
      "RefreshTokenRequest": {
        "properties": {
          "term": {
            "$ref": "#/components/schemas/TokenTerm"
          },
          "token": {
            "example": "admin",
            "type": "string"
          }
        },
        "required": [
          "username",
          "password"
        ]
      },
      "RefreshTokenResponse": {
        "properties": {
          "token": {
            "$ref": "#/components/schemas/Token"
          }
        },
        "required": [
          "token"
        ]
      },
      "SearchRecordRequest": {
        "properties": {
          "annotations": {
            "additionalProperties": {
              "type": "string"
            },
            "type": "object"
          },
          "limit": {
            "type": "integer"
          },
          "offset": {
            "type": "integer"
          },
          "query": {
            "$ref": "#/components/schemas/BooleanExpression"
          },
          "resolveReferences": {
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "useHistory": {
            "type": "boolean"
          }
        },
        "type": "object"
      },
      "Token": {
        "example": {
          "content": "eyJhbGciOiJSUzI1NiIsI-8pl63y8h-ZOLM",
          "expiration": "2023-10-16T15:14:11.161530Z",
          "term": "SHORT"
        },
        "properties": {
          "content": {
            "type": "string"
          },
          "expiration": {
            "format": "date-time",
            "type": "string"
          },
          "term": {
            "$ref": "#/components/schemas/TokenTerm"
          }
        },
        "type": "object"
      },
      "TokenTerm": {
        "enum": [
          "VERY_SHORT",
          "SHORT",
          "MIDDLE",
          "LONG",
          "VERY_LONG"
        ],
        "example": "LONG",
        "format": "enum",
        "type": "string"
      },
      "ViewTokenResponse": {}
    },
    "securitySchemes": {
      "bearerAuth": {
        "bearerFormat": "JWT",
        "scheme": "bearer",
        "type": "http"
      }
    }
  },
  "security": [
    {
      "bearerAuth": []
    }
  ],
  "tags": [
    {
      "description": "Authentication APIs are used to authenticate users and get access to the Resources. For all endpoints, which needs you to be authenticated, you need to pass the access token in the header.\n                The access token is obtained by calling the authenticate endpoint.",
      "name": "Authentication"
    }
  ]
}