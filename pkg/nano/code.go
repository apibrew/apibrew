// Code generated by apbr generate. DO NOT EDIT.
// versions:
// 	apbr generate v1.2

//go:build !codeanalysis

package nano

import "github.com/google/uuid"
import "time"

type Code struct {
	AuditData     *CodeAuditData    `json:"auditData,omitempty"`
	Annotations   map[string]string `json:"annotations,omitempty"`
	ContentFormat CodeContentFormat `json:"contentFormat,omitempty"`
	Id            *uuid.UUID        `json:"id,omitempty"`
	Name          string            `json:"name,omitempty"`
	Content       string            `json:"content,omitempty"`
	Version       int32             `json:"version,omitempty"`
	Language      CodeLanguage      `json:"language,omitempty"`
}

func (s *Code) GetAuditData() *CodeAuditData {
	return s.AuditData
}
func (s *Code) GetAnnotations() map[string]string {
	return s.Annotations
}
func (s *Code) GetContentFormat() CodeContentFormat {
	return s.ContentFormat
}
func (s *Code) GetId() *uuid.UUID {
	return s.Id
}
func (s *Code) GetName() string {
	return s.Name
}
func (s *Code) GetContent() string {
	return s.Content
}
func (s *Code) GetVersion() int32 {
	return s.Version
}
func (s *Code) GetLanguage() CodeLanguage {
	return s.Language
}

type CodeAuditData struct {
	CreatedBy *string    `json:"createdBy,omitempty"`
	CreatedOn *time.Time `json:"createdOn,omitempty"`
	UpdatedBy *string    `json:"updatedBy,omitempty"`
	UpdatedOn *time.Time `json:"updatedOn,omitempty"`
}

func (s *CodeAuditData) GetCreatedBy() *string {
	return s.CreatedBy
}
func (s *CodeAuditData) GetCreatedOn() *time.Time {
	return s.CreatedOn
}
func (s *CodeAuditData) GetUpdatedBy() *string {
	return s.UpdatedBy
}
func (s *CodeAuditData) GetUpdatedOn() *time.Time {
	return s.UpdatedOn
}

type CodeContentFormat string

const (
	CodeContentFormat_TEXT  CodeContentFormat = "TEXT"
	CodeContentFormat_TAR   CodeContentFormat = "TAR"
	CodeContentFormat_TARGZ CodeContentFormat = "TAR_GZ"
)

type CodeLanguage string

const (
	CodeLanguage_PYTHON     CodeLanguage = "PYTHON"
	CodeLanguage_JAVASCRIPT CodeLanguage = "JAVASCRIPT"
)
