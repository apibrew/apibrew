// AUTOGENERATED FILE

//go:build !codeanalysis

package resource_model

import (
	"github.com/google/uuid"
)
import "time"

type ResourceAction struct {
	Id          *uuid.UUID        `json:"id_,omitempty"`
	Version     int32             `json:"version_,omitempty"`
	CreatedBy   *string           `json:"createdBy_,omitempty"`
	UpdatedBy   *string           `json:"updatedBy_,omitempty"`
	CreatedOn   *time.Time        `json:"createdOn_,omitempty"`
	UpdatedOn   *time.Time        `json:"updatedOn_,omitempty"`
	Resource    *Resource         `json:"resource_,omitempty"`
	Name        string            `json:"name_,omitempty"`
	Title       *string           `json:"title_,omitempty"`
	Description *string           `json:"description_,omitempty"`
	Internal    bool              `json:"internal_,omitempty"`
	Types       []SubType         `json:"types_,omitempty"`
	Input       []Property        `json:"input_,omitempty"`
	Output      *Property         `json:"output_,omitempty"`
	Annotations map[string]string `json:"annotations_,omitempty"`
}

func (s *ResourceAction) GetId() *uuid.UUID {
	return s.Id
}
func (s *ResourceAction) GetVersion() int32 {
	return s.Version
}
func (s *ResourceAction) GetCreatedBy() *string {
	return s.CreatedBy
}
func (s *ResourceAction) GetUpdatedBy() *string {
	return s.UpdatedBy
}
func (s *ResourceAction) GetCreatedOn() *time.Time {
	return s.CreatedOn
}
func (s *ResourceAction) GetUpdatedOn() *time.Time {
	return s.UpdatedOn
}
func (s *ResourceAction) GetResource() *Resource {
	return s.Resource
}
func (s *ResourceAction) GetName() string {
	return s.Name
}
func (s *ResourceAction) GetTitle() *string {
	return s.Title
}
func (s *ResourceAction) GetDescription() *string {
	return s.Description
}
func (s *ResourceAction) GetInternal() bool {
	return s.Internal
}
func (s *ResourceAction) GetTypes() []SubType {
	return s.Types
}
func (s *ResourceAction) GetInput() []Property {
	return s.Input
}
func (s *ResourceAction) GetOutput() *Property {
	return s.Output
}
func (s *ResourceAction) GetAnnotations() map[string]string {
	return s.Annotations
}

type ResourceActionType string

const (
	ResourceActionType_BOOL      ResourceActionType = "BOOL"
	ResourceActionType_STRING    ResourceActionType = "STRING"
	ResourceActionType_FLOAT32   ResourceActionType = "FLOAT32"
	ResourceActionType_FLOAT64   ResourceActionType = "FLOAT64"
	ResourceActionType_INT32     ResourceActionType = "INT32"
	ResourceActionType_INT64     ResourceActionType = "INT64"
	ResourceActionType_BYTES     ResourceActionType = "BYTES"
	ResourceActionType_UUID      ResourceActionType = "UUID"
	ResourceActionType_DATE      ResourceActionType = "DATE"
	ResourceActionType_TIME      ResourceActionType = "TIME"
	ResourceActionType_TIMESTAMP ResourceActionType = "TIMESTAMP"
	ResourceActionType_OBJECT    ResourceActionType = "OBJECT"
	ResourceActionType_MAP       ResourceActionType = "MAP"
	ResourceActionType_LIST      ResourceActionType = "LIST"
	ResourceActionType_REFERENCE ResourceActionType = "REFERENCE"
	ResourceActionType_ENUM      ResourceActionType = "ENUM"
	ResourceActionType_STRUCT    ResourceActionType = "STRUCT"
)
