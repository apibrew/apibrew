# Generated with protoc-gen-openapi
# https://github.com/kollalabs/protoc-gen-openapi

openapi: 3.0.3
info:
    title: Data Handler
    description: OpenApi 3.0 definition for Data Handler Rest API
    contact:
        name: Taleh Ibrahimli
        url: https://github.com/tislib/data-handler
        email: talehsmail@gmail.com
    license:
        name: Apache License
        url: https://github.com/google/gnostic/blob/master/LICENSE
    version: "1.0"
paths:
    /authentication/token:
        put:
            tags:
                - Authentication
                - Authentication
            summary: Renew token
            description: Renew token with existing token
            operationId: authenticationRenewToken
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/RenewTokenRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/RenewTokenResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
        post:
            tags:
                - Authentication
                - Authentication
            summary: Authentication with username/password
            description: Authentication with username/password and create new token
            operationId: authenticationAuthenticate
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/AuthenticationRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/AuthenticationResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /records/_search_read_stream:
        post:
            tags:
                - Record
            summary: ReadStream
            operationId: Record_ReadStream
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/ReadStreamRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Record'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /records/_search_write_stream:
        post:
            tags:
                - Record
            summary: WriteStream
            operationId: Record_WriteStream
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/Record'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/WriteStreamResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /records/{namespace}/{resource}:
        get:
            tags:
                - Record
            summary: List
            operationId: Record_List
            parameters:
                - name: namespace
                  in: path
                  required: true
                  schema:
                    type: string
                - name: resource
                  in: path
                  required: true
                  schema:
                    type: string
                - name: token
                  in: query
                  schema:
                    type: string
                - name: limit
                  in: query
                  schema:
                    type: integer
                    format: uint32
                - name: offset
                  in: query
                  schema:
                    type: integer
                    format: uint64
                - name: useHistory
                  in: query
                  schema:
                    type: boolean
                - name: resolveReferences
                  in: query
                  schema:
                    type: array
                    items:
                        type: string
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ListRecordResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /records/{namespace}/{resource}/_bulk:
        put:
            tags:
                - Record
            summary: Update
            operationId: Record_Update
            parameters:
                - name: namespace
                  in: path
                  required: true
                  schema:
                    type: string
                - name: resource
                  in: path
                  required: true
                  schema:
                    type: string
                - name: token
                  in: query
                  schema:
                    type: string
                - name: record.id
                  in: query
                  schema:
                    type: string
                - name: record.propertiesPacked
                  in: query
                  schema:
                    type: array
                    items:
                        $ref: '#/components/schemas/GoogleProtobufValue'
                - name: checkVersion
                  in: query
                  schema:
                    type: boolean
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/UpdateRecordResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
        post:
            tags:
                - Record
            summary: Create
            operationId: Record_Create
            parameters:
                - name: namespace
                  in: path
                  required: true
                  schema:
                    type: string
                - name: resource
                  in: path
                  required: true
                  schema:
                    type: string
                - name: token
                  in: query
                  schema:
                    type: string
                - name: record.id
                  in: query
                  schema:
                    type: string
                - name: record.propertiesPacked
                  in: query
                  schema:
                    type: array
                    items:
                        $ref: '#/components/schemas/GoogleProtobufValue'
                - name: ignoreIfExists
                  in: query
                  schema:
                    type: boolean
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/CreateRecordResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
        delete:
            tags:
                - Record
            summary: Delete
            operationId: Record_Delete
            parameters:
                - name: namespace
                  in: path
                  required: true
                  schema:
                    type: string
                - name: resource
                  in: path
                  required: true
                  schema:
                    type: string
                - name: token
                  in: query
                  schema:
                    type: string
                - name: id
                  in: query
                  schema:
                    type: string
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/DeleteRecordResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /records/{namespace}/{resource}/_multi:
        post:
            tags:
                - Record
            summary: UpdateMulti
            operationId: Record_UpdateMulti
            parameters:
                - name: namespace
                  in: path
                  required: true
                  schema:
                    type: string
                - name: resource
                  in: path
                  required: true
                  schema:
                    type: string
                - name: token
                  in: query
                  schema:
                    type: string
                - name: query.not.not.equal.left.property
                  in: query
                  schema:
                    type: string
                - name: query.not.not.equal.left.value
                  in: query
                  schema:
                    $ref: '#/components/schemas/GoogleProtobufValue'
                - name: query.not.not.equal.right.property
                  in: query
                  schema:
                    type: string
                - name: query.not.not.equal.right.value
                  in: query
                  schema:
                    $ref: '#/components/schemas/GoogleProtobufValue'
                - name: query.not.not.regexMatch.pattern
                  in: query
                  schema:
                    type: string
                - name: query.not.regexMatch.pattern
                  in: query
                  schema:
                    type: string
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/UpdateMultiRecordResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /records/{namespace}/{resource}/_search:
        post:
            tags:
                - Record
            summary: Search
            operationId: Record_Search
            parameters:
                - name: namespace
                  in: path
                  required: true
                  schema:
                    type: string
                - name: resource
                  in: path
                  required: true
                  schema:
                    type: string
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/SearchRecordRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/SearchRecordResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /records/{namespace}/{resource}/{id}:
        get:
            tags:
                - Record
            summary: Get
            operationId: Record_Get
            parameters:
                - name: namespace
                  in: path
                  required: true
                  schema:
                    type: string
                - name: resource
                  in: path
                  required: true
                  schema:
                    type: string
                - name: id
                  in: path
                  required: true
                  schema:
                    type: string
                - name: token
                  in: query
                  schema:
                    type: string
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/GetRecordResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /system/data-sources:
        get:
            tags:
                - DataSource
            summary: List
            operationId: DataSource_List
            parameters:
                - name: token
                  in: query
                  schema:
                    type: string
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ListDataSourceResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
        put:
            tags:
                - DataSource
            summary: Update
            operationId: DataSource_Update
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/UpdateDataSourceRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/UpdateDataSourceResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
        post:
            tags:
                - DataSource
            summary: Create
            operationId: DataSource_Create
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/CreateDataSourceRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/CreateDataSourceResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
        delete:
            tags:
                - DataSource
            summary: Delete
            operationId: DataSource_Delete
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/DeleteDataSourceRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/DeleteDataSourceResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /system/data-sources/{id}:
        get:
            tags:
                - DataSource
            summary: Get
            operationId: DataSource_Get
            parameters:
                - name: id
                  in: path
                  required: true
                  schema:
                    type: string
                - name: token
                  in: query
                  schema:
                    type: string
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/GetDataSourceResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /system/data-sources/{id}/_prepare_entity:
        post:
            tags:
                - DataSource
            summary: PrepareResourceFromEntity
            operationId: DataSource_PrepareResourceFromEntity
            parameters:
                - name: id
                  in: path
                  required: true
                  schema:
                    type: string
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/PrepareResourceFromEntityRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/PrepareResourceFromEntityResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /system/data-sources/{id}/_status:
        get:
            tags:
                - DataSource
            summary: Status
            operationId: DataSource_Status
            parameters:
                - name: id
                  in: path
                  required: true
                  schema:
                    type: string
                - name: token
                  in: query
                  schema:
                    type: string
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/StatusResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /system/data-sources/{id}/entities:
        get:
            tags:
                - DataSource
            summary: ListEntities
            operationId: DataSource_ListEntities
            parameters:
                - name: id
                  in: path
                  required: true
                  schema:
                    type: string
                - name: token
                  in: query
                  schema:
                    type: string
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ListEntitiesResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /system/namespaces:
        get:
            tags:
                - Namespace
            summary: List
            operationId: Namespace_List
            parameters:
                - name: token
                  in: query
                  schema:
                    type: string
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ListNamespaceResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
        put:
            tags:
                - Namespace
            summary: Update
            operationId: Namespace_Update
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/UpdateNamespaceRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/UpdateNamespaceResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
        post:
            tags:
                - Namespace
            summary: Create
            operationId: Namespace_Create
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/CreateNamespaceRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/CreateNamespaceResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
        delete:
            tags:
                - Namespace
            summary: Delete
            operationId: Namespace_Delete
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/DeleteNamespaceRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/DeleteNamespaceResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /system/namespaces/{id}:
        get:
            tags:
                - Namespace
            summary: Get
            operationId: Namespace_Get
            parameters:
                - name: id
                  in: path
                  required: true
                  schema:
                    type: string
                - name: token
                  in: query
                  schema:
                    type: string
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/GetNamespaceResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /system/resources:
        get:
            tags:
                - Resource
            summary: List
            operationId: Resource_List
            parameters:
                - name: token
                  in: query
                  schema:
                    type: string
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ListResourceResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
        put:
            tags:
                - Resource
            summary: Update
            operationId: Resource_Update
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/UpdateResourceRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/UpdateResourceResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
        post:
            tags:
                - Resource
            summary: Create
            operationId: Resource_Create
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/CreateResourceRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/CreateResourceResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
        delete:
            tags:
                - Resource
            summary: Delete
            operationId: Resource_Delete
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/DeleteResourceRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/DeleteResourceResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /system/resources/_migrate:
        post:
            tags:
                - Resource
            summary: PrepareResourceMigrationPlan
            operationId: Resource_PrepareResourceMigrationPlan
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/PrepareResourceMigrationPlanRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/PrepareResourceMigrationPlanResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /system/resources/{id}:
        get:
            tags:
                - Resource
            summary: Get
            operationId: Resource_Get
            parameters:
                - name: id
                  in: path
                  required: true
                  schema:
                    type: string
                - name: token
                  in: query
                  schema:
                    type: string
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/GetResourceResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /system/resources/{namespace}/{name}:
        get:
            tags:
                - Resource
            summary: GetByName
            operationId: Resource_GetByName
            parameters:
                - name: namespace
                  in: path
                  required: true
                  schema:
                    type: string
                - name: name
                  in: path
                  required: true
                  schema:
                    type: string
                - name: token
                  in: query
                  schema:
                    type: string
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/GetResourceByNameResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /system/users:
        get:
            tags:
                - User
            summary: List
            operationId: User_List
            parameters:
                - name: token
                  in: query
                  schema:
                    type: string
                - name: limit
                  in: query
                  schema:
                    type: integer
                    format: uint32
                - name: offset
                  in: query
                  schema:
                    type: integer
                    format: uint64
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ListUserResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /system/users/_bulk:
        put:
            tags:
                - User
            summary: Update
            operationId: User_Update
            parameters:
                - name: token
                  in: query
                  schema:
                    type: string
                - name: user.id
                  in: query
                  schema:
                    type: string
                - name: user.username
                  in: query
                  schema:
                    type: string
                - name: user.password
                  in: query
                  schema:
                    type: string
                - name: user.signKey
                  in: query
                  schema:
                    type: string
                - name: user.auditData.createdOn
                  in: query
                  schema:
                    type: string
                    format: date-time
                - name: user.auditData.updatedOn
                  in: query
                  schema:
                    type: string
                    format: date-time
                - name: user.auditData.createdBy
                  in: query
                  schema:
                    type: string
                - name: user.auditData.updatedBy
                  in: query
                  schema:
                    type: string
                - name: user.version
                  in: query
                  schema:
                    type: integer
                    format: uint32
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/UpdateUserResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
        post:
            tags:
                - User
            summary: Create
            operationId: User_Create
            parameters:
                - name: token
                  in: query
                  schema:
                    type: string
                - name: user.id
                  in: query
                  schema:
                    type: string
                - name: user.username
                  in: query
                  schema:
                    type: string
                - name: user.password
                  in: query
                  schema:
                    type: string
                - name: user.signKey
                  in: query
                  schema:
                    type: string
                - name: user.auditData.createdOn
                  in: query
                  schema:
                    type: string
                    format: date-time
                - name: user.auditData.updatedOn
                  in: query
                  schema:
                    type: string
                    format: date-time
                - name: user.auditData.createdBy
                  in: query
                  schema:
                    type: string
                - name: user.auditData.updatedBy
                  in: query
                  schema:
                    type: string
                - name: user.version
                  in: query
                  schema:
                    type: integer
                    format: uint32
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/CreateUserResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
        delete:
            tags:
                - User
            summary: Delete
            operationId: User_Delete
            parameters:
                - name: token
                  in: query
                  schema:
                    type: string
                - name: id
                  in: query
                  schema:
                    type: string
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/DeleteUserResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /system/users/{id}:
        get:
            tags:
                - User
            summary: Get
            operationId: User_Get
            parameters:
                - name: id
                  in: path
                  required: true
                  schema:
                    type: string
                - name: token
                  in: query
                  schema:
                    type: string
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/GetUserResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /system/watch:
        post:
            tags:
                - Watch
            summary: Watch
            description: Sends a greeting
            operationId: Watch_Watch
            parameters:
                - name: token
                  in: query
                  schema:
                    type: string
                - name: namespace
                  in: query
                  schema:
                    type: string
                - name: resource
                  in: query
                  schema:
                    type: string
                - name: query.not.not.equal.left.property
                  in: query
                  schema:
                    type: string
                - name: query.not.not.equal.left.value
                  in: query
                  schema:
                    $ref: '#/components/schemas/GoogleProtobufValue'
                - name: query.not.not.equal.right.property
                  in: query
                  schema:
                    type: string
                - name: query.not.not.equal.right.value
                  in: query
                  schema:
                    $ref: '#/components/schemas/GoogleProtobufValue'
                - name: query.not.not.regexMatch.pattern
                  in: query
                  schema:
                    type: string
                - name: query.not.regexMatch.pattern
                  in: query
                  schema:
                    type: string
                - name: events
                  in: query
                  schema:
                    type: array
                    items:
                        enum:
                            - CREATE
                            - UPDATE
                            - DELETE
                            - GET
                            - LIST
                        type: string
                        format: enum
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/WatchMessage'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
components:
    schemas:
        Any:
            type: object
            properties:
                value:
                    $ref: '#/components/schemas/GoogleProtobufAny'
                yaml:
                    type: string
        AuditData:
            type: object
            properties:
                createdOn:
                    type: string
                    format: date-time
                updatedOn:
                    type: string
                    format: date-time
                createdBy:
                    type: string
                updatedBy:
                    type: string
        AuthenticationRequest:
            type: object
            properties:
                username:
                    type: string
                password:
                    type: string
                term:
                    enum:
                        - SHORT
                        - MIDDLE
                        - LONG
                        - VERY_LONG
                    type: string
                    format: enum
        AuthenticationResponse:
            type: object
            properties:
                token:
                    $ref: '#/components/schemas/Token'
        BooleanExpression:
            type: object
            properties:
                and:
                    $ref: '#/components/schemas/CompoundBooleanExpression'
                or:
                    $ref: '#/components/schemas/CompoundBooleanExpression'
                not:
                    $ref: '#/components/schemas/BooleanExpression'
                equal:
                    $ref: '#/components/schemas/PairExpression'
                lessThan:
                    $ref: '#/components/schemas/PairExpression'
                greaterThan:
                    $ref: '#/components/schemas/PairExpression'
                lessThanOrEqual:
                    $ref: '#/components/schemas/PairExpression'
                greaterThanOrEqual:
                    $ref: '#/components/schemas/PairExpression'
                in:
                    $ref: '#/components/schemas/PairExpression'
                isNull:
                    $ref: '#/components/schemas/Expression'
                regexMatch:
                    $ref: '#/components/schemas/RegexMatchExpression'
        CompoundBooleanExpression:
            type: object
            properties:
                expressions:
                    type: array
                    items:
                        $ref: '#/components/schemas/BooleanExpression'
        CreateDataSourceRequest:
            type: object
            properties:
                token:
                    type: string
                dataSource:
                    $ref: '#/components/schemas/DataSource'
        CreateDataSourceResponse:
            type: object
            properties:
                dataSource:
                    $ref: '#/components/schemas/DataSource'
        CreateNamespaceRequest:
            type: object
            properties:
                token:
                    type: string
                namespace:
                    $ref: '#/components/schemas/Namespace'
        CreateNamespaceResponse:
            type: object
            properties:
                namespace:
                    $ref: '#/components/schemas/Namespace'
        CreateRecordResponse:
            type: object
            properties:
                record:
                    $ref: '#/components/schemas/Record'
                inserted:
                    type: boolean
        CreateResourceRequest:
            type: object
            properties:
                token:
                    type: string
                resource:
                    $ref: '#/components/schemas/Resource'
                doMigration:
                    type: boolean
                forceMigration:
                    type: boolean
                annotations:
                    type: object
                    additionalProperties:
                        type: string
        CreateResourceResponse:
            type: object
            properties:
                resource:
                    $ref: '#/components/schemas/Resource'
        CreateUserResponse:
            type: object
            properties:
                user:
                    $ref: '#/components/schemas/User'
        DataSource:
            type: object
            properties:
                id:
                    type: string
                backend:
                    enum:
                        - POSTGRESQL
                        - VIRTUAL
                        - MYSQL
                        - ORACLE
                        - MONGODB
                        - REDIS
                    type: string
                    format: enum
                name:
                    type: string
                description:
                    type: string
                postgresqlParams:
                    $ref: '#/components/schemas/PostgresqlParams'
                mysqlParams:
                    $ref: '#/components/schemas/MysqlParams'
                virtualParams:
                    $ref: '#/components/schemas/VirtualParams'
                redisParams:
                    $ref: '#/components/schemas/RedisParams'
                mongoParams:
                    $ref: '#/components/schemas/MongoParams'
                auditData:
                    $ref: '#/components/schemas/AuditData'
                version:
                    type: integer
                    format: uint32
        DataSourceCatalog:
            type: object
            properties:
                name:
                    type: string
                entities:
                    type: array
                    items:
                        $ref: '#/components/schemas/DataSourceEntity'
        DataSourceEntity:
            type: object
            properties:
                name:
                    type: string
                readOnly:
                    type: boolean
        DeleteDataSourceRequest:
            type: object
            properties:
                token:
                    type: string
                id:
                    type: string
        DeleteDataSourceResponse:
            type: object
            properties: {}
        DeleteNamespaceRequest:
            type: object
            properties:
                token:
                    type: string
                id:
                    type: string
        DeleteNamespaceResponse:
            type: object
            properties:
                namespace:
                    $ref: '#/components/schemas/Namespace'
        DeleteRecordResponse:
            type: object
            properties: {}
        DeleteResourceRequest:
            type: object
            properties:
                token:
                    type: string
                id:
                    type: string
                doMigration:
                    type: boolean
                forceMigration:
                    type: boolean
                annotations:
                    type: object
                    additionalProperties:
                        type: string
        DeleteResourceResponse:
            type: object
            properties: {}
        DeleteUserResponse:
            type: object
            properties: {}
        Expression:
            type: object
            properties:
                additionalProperties:
                    type: array
                    items:
                        $ref: '#/components/schemas/NamedAny'
        GetDataSourceResponse:
            type: object
            properties:
                dataSource:
                    $ref: '#/components/schemas/DataSource'
        GetNamespaceResponse:
            type: object
            properties:
                namespace:
                    $ref: '#/components/schemas/Namespace'
        GetRecordResponse:
            type: object
            properties:
                record:
                    $ref: '#/components/schemas/Record'
        GetResourceByNameResponse:
            type: object
            properties:
                resource:
                    $ref: '#/components/schemas/Resource'
        GetResourceResponse:
            type: object
            properties:
                resource:
                    $ref: '#/components/schemas/Resource'
        GetUserResponse:
            type: object
            properties:
                user:
                    $ref: '#/components/schemas/User'
        GoogleProtobufAny:
            type: object
            properties:
                '@type':
                    type: string
                    description: The type of the serialized message.
            additionalProperties: true
            description: Contains an arbitrary serialized message along with a @type that describes the type of the serialized message.
        GoogleProtobufValue:
            description: Represents a dynamically typed value which can be either null, a number, a string, a boolean, a recursive struct value, or a list of values.
        ListDataSourceResponse:
            type: object
            properties:
                content:
                    type: array
                    items:
                        $ref: '#/components/schemas/DataSource'
        ListEntitiesResponse:
            type: object
            properties:
                catalogs:
                    type: array
                    items:
                        $ref: '#/components/schemas/DataSourceCatalog'
        ListNamespaceResponse:
            type: object
            properties:
                content:
                    type: array
                    items:
                        $ref: '#/components/schemas/Namespace'
        ListRecordResponse:
            type: object
            properties:
                total:
                    type: integer
                    format: uint32
                content:
                    type: array
                    items:
                        $ref: '#/components/schemas/Record'
        ListResourceResponse:
            type: object
            properties:
                content:
                    type: array
                    items:
                        $ref: '#/components/schemas/Resource'
        ListUserResponse:
            type: object
            properties:
                content:
                    $ref: '#/components/schemas/User'
        MongoParams:
            type: object
            properties:
                uri:
                    type: string
                dbName:
                    type: string
        MysqlParams:
            type: object
            properties:
                username:
                    type: string
                password:
                    type: string
                host:
                    type: string
                port:
                    type: integer
                    format: uint32
                dbName:
                    type: string
                defaultSchema:
                    type: string
        NamedAny:
            type: object
            properties:
                name:
                    type: string
                    description: Map key
                value:
                    $ref: '#/components/schemas/Any'
            description: Automatically-generated message used to represent maps of Any as ordered (name,value) pairs.
        Namespace:
            type: object
            properties:
                id:
                    type: string
                name:
                    type: string
                description:
                    type: string
                details:
                    type: object
                securityContext:
                    $ref: '#/components/schemas/SecurityContext'
                auditData:
                    $ref: '#/components/schemas/AuditData'
                version:
                    type: integer
                    format: uint32
        PairExpression:
            type: object
            properties:
                left:
                    $ref: '#/components/schemas/Expression'
                right:
                    $ref: '#/components/schemas/Expression'
        PostgresqlParams:
            type: object
            properties:
                username:
                    type: string
                password:
                    type: string
                host:
                    type: string
                port:
                    type: integer
                    format: uint32
                dbName:
                    type: string
                defaultSchema:
                    type: string
        PrepareResourceFromEntityRequest:
            type: object
            properties:
                token:
                    type: string
                id:
                    type: string
                catalog:
                    type: string
                entity:
                    type: string
        PrepareResourceFromEntityResponse:
            type: object
            properties:
                resource:
                    $ref: '#/components/schemas/Resource'
        PrepareResourceMigrationPlanRequest:
            type: object
            properties:
                token:
                    type: string
                prepareFromDataSource:
                    type: boolean
                resources:
                    type: array
                    items:
                        $ref: '#/components/schemas/Resource'
                annotations:
                    type: object
                    additionalProperties:
                        type: string
        PrepareResourceMigrationPlanResponse:
            type: object
            properties:
                plans:
                    type: array
                    items:
                        $ref: '#/components/schemas/ResourceMigrationPlan'
        ReadStreamRequest:
            type: object
            properties:
                token:
                    type: string
                namespace:
                    type: string
                resource:
                    type: string
                query:
                    $ref: '#/components/schemas/BooleanExpression'
                limit:
                    type: integer
                    format: uint32
                offset:
                    type: integer
                    format: uint64
                useHistory:
                    type: boolean
                resolveReferences:
                    type: array
                    items:
                        type: string
                useTransaction:
                    type: boolean
                packRecords:
                    type: boolean
                annotations:
                    type: object
                    additionalProperties:
                        type: string
        Record:
            type: object
            properties:
                id:
                    type: string
                properties:
                    type: object
                    additionalProperties:
                        $ref: '#/components/schemas/GoogleProtobufValue'
                propertiesPacked:
                    type: array
                    items:
                        $ref: '#/components/schemas/GoogleProtobufValue'
        RedisParams:
            type: object
            properties:
                addr:
                    type: string
                password:
                    type: string
                db:
                    type: integer
                    format: int32
        Reference:
            type: object
            properties:
                referencedResource:
                    type: string
                cascade:
                    type: boolean
        RegexMatchExpression:
            type: object
            properties:
                pattern:
                    type: string
                expression:
                    $ref: '#/components/schemas/Expression'
        RenewTokenRequest:
            type: object
            properties:
                token:
                    type: string
                term:
                    enum:
                        - SHORT
                        - MIDDLE
                        - LONG
                        - VERY_LONG
                    type: string
                    format: enum
        RenewTokenResponse:
            type: object
            properties:
                token:
                    $ref: '#/components/schemas/Token'
        Resource:
            type: object
            properties:
                id:
                    type: string
                name:
                    type: string
                namespace:
                    type: string
                sourceConfig:
                    $ref: '#/components/schemas/ResourceSourceConfig'
                properties:
                    type: array
                    items:
                        $ref: '#/components/schemas/ResourceProperty'
                indexes:
                    type: array
                    items:
                        $ref: '#/components/schemas/ResourceIndex'
                securityContext:
                    $ref: '#/components/schemas/SecurityContext'
                virtual:
                    type: boolean
                immutable:
                    type: boolean
                abstract:
                    type: boolean
                title:
                    type: string
                description:
                    type: string
                auditData:
                    $ref: '#/components/schemas/AuditData'
                version:
                    type: integer
                    format: uint32
                annotations:
                    type: object
                    additionalProperties:
                        type: string
        ResourceIndex:
            type: object
            properties:
                properties:
                    type: array
                    items:
                        $ref: '#/components/schemas/ResourceIndexProperty'
                indexType:
                    enum:
                        - BTREE
                        - HASH
                    type: string
                    format: enum
                unique:
                    type: boolean
                annotations:
                    type: object
                    additionalProperties:
                        type: string
        ResourceIndexProperty:
            type: object
            properties:
                name:
                    type: string
                order:
                    enum:
                        - ORDER_UNKNOWN
                        - ORDER_ASC
                        - ORDER_DESC
                    type: string
                    format: enum
        ResourceMigrationCreateIndex:
            type: object
            properties:
                index:
                    type: integer
                    format: uint32
        ResourceMigrationCreateProperty:
            type: object
            properties:
                property:
                    type: string
        ResourceMigrationCreateResource:
            type: object
            properties: {}
        ResourceMigrationDeleteIndex:
            type: object
            properties:
                existingIndex:
                    type: integer
                    format: uint32
        ResourceMigrationDeleteProperty:
            type: object
            properties:
                existingProperty:
                    type: string
        ResourceMigrationDeleteResource:
            type: object
            properties: {}
        ResourceMigrationPlan:
            type: object
            properties:
                existingResource:
                    $ref: '#/components/schemas/Resource'
                currentResource:
                    $ref: '#/components/schemas/Resource'
                steps:
                    type: array
                    items:
                        $ref: '#/components/schemas/ResourceMigrationStep'
        ResourceMigrationStep:
            type: object
            properties:
                createResource:
                    $ref: '#/components/schemas/ResourceMigrationCreateResource'
                deleteResource:
                    $ref: '#/components/schemas/ResourceMigrationDeleteResource'
                updateResource:
                    $ref: '#/components/schemas/ResourceMigrationUpdateResource'
                createProperty:
                    $ref: '#/components/schemas/ResourceMigrationCreateProperty'
                deleteProperty:
                    $ref: '#/components/schemas/ResourceMigrationDeleteProperty'
                updateProperty:
                    $ref: '#/components/schemas/ResourceMigrationUpdateProperty'
                createIndex:
                    $ref: '#/components/schemas/ResourceMigrationCreateIndex'
                deleteIndex:
                    $ref: '#/components/schemas/ResourceMigrationDeleteIndex'
        ResourceMigrationUpdateProperty:
            type: object
            properties:
                existingProperty:
                    type: string
                property:
                    type: string
                changedFields:
                    type: array
                    items:
                        type: string
        ResourceMigrationUpdateResource:
            type: object
            properties:
                changedFields:
                    type: array
                    items:
                        type: string
        ResourceProperty:
            type: object
            properties:
                id:
                    type: string
                name:
                    type: string
                type:
                    enum:
                        - BOOL
                        - STRING
                        - FLOAT32
                        - FLOAT64
                        - INT32
                        - INT64
                        - BYTES
                        - UUID
                        - DATE
                        - TIME
                        - TIMESTAMP
                        - OBJECT
                        - MAP
                        - LIST
                        - REFERENCE
                        - ENUM
                    type: string
                    format: enum
                mapping:
                    type: string
                required:
                    type: boolean
                primary:
                    type: boolean
                length:
                    type: integer
                    format: uint32
                unique:
                    type: boolean
                securityContext:
                    $ref: '#/components/schemas/SecurityContext'
                defaultValue:
                    $ref: '#/components/schemas/GoogleProtobufValue'
                enumValues:
                    type: array
                    items:
                        $ref: '#/components/schemas/GoogleProtobufValue'
                reference:
                    $ref: '#/components/schemas/Reference'
                subType:
                    enum:
                        - BOOL
                        - STRING
                        - FLOAT32
                        - FLOAT64
                        - INT32
                        - INT64
                        - BYTES
                        - UUID
                        - DATE
                        - TIME
                        - TIMESTAMP
                        - OBJECT
                        - MAP
                        - LIST
                        - REFERENCE
                        - ENUM
                    type: string
                    format: enum
                immutable:
                    type: boolean
                title:
                    type: string
                description:
                    type: string
                exampleValue:
                    $ref: '#/components/schemas/GoogleProtobufValue'
                annotations:
                    type: object
                    additionalProperties:
                        type: string
        ResourceSourceConfig:
            type: object
            properties:
                dataSource:
                    type: string
                catalog:
                    type: string
                entity:
                    type: string
        SearchRecordRequest:
            type: object
            properties:
                token:
                    type: string
                namespace:
                    type: string
                resource:
                    type: string
                query:
                    $ref: '#/components/schemas/BooleanExpression'
                limit:
                    type: integer
                    format: uint32
                offset:
                    type: integer
                    format: uint64
                useHistory:
                    type: boolean
                resolveReferences:
                    type: array
                    items:
                        type: string
                annotations:
                    type: object
                    additionalProperties:
                        type: string
        SearchRecordResponse:
            type: object
            properties:
                total:
                    type: integer
                    format: uint32
                content:
                    type: array
                    items:
                        $ref: '#/components/schemas/Record'
        SecurityConstraint:
            type: object
            properties:
                namespace:
                    type: string
                resource:
                    type: string
                property:
                    type: string
                before:
                    type: string
                    format: date-time
                after:
                    type: string
                    format: date-time
                principal:
                    type: string
                recordIds:
                    type: array
                    items:
                        type: string
                operation:
                    enum:
                        - OPERATION_TYPE_READ
                        - OPERATION_TYPE_CREATE
                        - OPERATION_TYPE_UPDATE
                        - OPERATION_TYPE_DELETE
                        - FULL
                    type: string
                    format: enum
                permit:
                    enum:
                        - PERMIT_TYPE_ALLOW
                        - PERMIT_TYPE_REJECT
                        - PERMIT_TYPE_UNKNOWN
                    type: string
                    format: enum
        SecurityContext:
            type: object
            properties:
                constraints:
                    type: array
                    items:
                        $ref: '#/components/schemas/SecurityConstraint'
        Status:
            type: object
            properties:
                code:
                    type: integer
                    description: The status code, which should be an enum value of [google.rpc.Code][google.rpc.Code].
                    format: int32
                message:
                    type: string
                    description: A developer-facing error message, which should be in English. Any user-facing error message should be localized and sent in the [google.rpc.Status.details][google.rpc.Status.details] field, or localized by the client.
                details:
                    type: array
                    items:
                        $ref: '#/components/schemas/GoogleProtobufAny'
                    description: A list of messages that carry the error details.  There is a common set of message types for APIs to use.
            description: 'The `Status` type defines a logical error model that is suitable for different programming environments, including REST APIs and RPC APIs. It is used by [gRPC](https://github.com/grpc). Each `Status` message contains three pieces of data: error code, error message, and error details. You can find out more about this error model and how to work with it in the [API Design Guide](https://cloud.google.com/apis/design/errors).'
        StatusResponse:
            type: object
            properties:
                connectionAlreadyInitiated:
                    type: boolean
                testConnection:
                    type: boolean
        Token:
            type: object
            properties:
                term:
                    enum:
                        - SHORT
                        - MIDDLE
                        - LONG
                        - VERY_LONG
                    type: string
                    format: enum
                content:
                    type: string
                expiration:
                    type: string
                    format: date-time
        UpdateDataSourceRequest:
            type: object
            properties:
                token:
                    type: string
                dataSource:
                    $ref: '#/components/schemas/DataSource'
        UpdateDataSourceResponse:
            type: object
            properties:
                dataSource:
                    $ref: '#/components/schemas/DataSource'
        UpdateMultiRecordResponse:
            type: object
            properties:
                record:
                    $ref: '#/components/schemas/Record'
        UpdateNamespaceRequest:
            type: object
            properties:
                token:
                    type: string
                namespaces:
                    $ref: '#/components/schemas/Namespace'
        UpdateNamespaceResponse:
            type: object
            properties:
                namespace:
                    $ref: '#/components/schemas/Namespace'
        UpdateRecordResponse:
            type: object
            properties:
                record:
                    $ref: '#/components/schemas/Record'
        UpdateResourceRequest:
            type: object
            properties:
                token:
                    type: string
                resource:
                    $ref: '#/components/schemas/Resource'
                doMigration:
                    type: boolean
                forceMigration:
                    type: boolean
                annotations:
                    type: object
                    additionalProperties:
                        type: string
        UpdateResourceResponse:
            type: object
            properties:
                resource:
                    $ref: '#/components/schemas/Resource'
        UpdateUserResponse:
            type: object
            properties:
                user:
                    $ref: '#/components/schemas/User'
        User:
            type: object
            properties:
                id:
                    type: string
                username:
                    type: string
                password:
                    type: string
                securityContext:
                    $ref: '#/components/schemas/SecurityContext'
                details:
                    type: object
                signKey:
                    type: string
                auditData:
                    $ref: '#/components/schemas/AuditData'
                version:
                    type: integer
                    format: uint32
        VirtualParams:
            type: object
            properties:
                mode:
                    enum:
                        - DISCARD
                        - ERROR
                    type: string
                    format: enum
        WatchMessage:
            type: object
            properties:
                changes:
                    type: object
                recordIds:
                    type: array
                    items:
                        type: string
                event:
                    enum:
                        - CREATE
                        - UPDATE
                        - DELETE
                        - GET
                        - LIST
                    type: string
                    format: enum
                eventOn:
                    type: string
                    format: date-time
        WriteStreamResponse:
            type: object
            properties:
                success:
                    type: array
                    items:
                        type: boolean
                created:
                    type: array
                    items:
                        type: boolean
                updated:
                    type: array
                    items:
                        type: boolean
    securitySchemes:
        bearerAuth:
            type: http
            scheme: bearer
            bearerFormat: JWT
security:
    - bearerAuth: []
tags:
    - name: Authentication
      description: Authentication Service is for authentication related operations
    - name: DataSource
      description: DataSource Service is for managing data sources
    - name: Namespace
      description: Namespace Service is for managing namespaces
    - name: Record
      description: Record service is an abstract service for records of all resources. You can do CRUD like operations with Record service
    - name: Resource
      description: Resource service is for managing resources
    - name: User
      description: User service is for managing users
    - name: Watch
      description: Watch service watching operations on records
