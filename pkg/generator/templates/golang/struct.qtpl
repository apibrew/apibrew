{% import "github.com/apibrew/apibrew/pkg/model" %}
{% import "github.com/apibrew/apibrew/pkg/service/annotations" %}

{%- func GenerateStructCode(pkg string, resource *model.Resource, name string, properties map[string]*model.ResourceProperty, annotated annotations.Annotated) -%}
{%- code typeName := GoName(name) -%}
type {%s typeName %} struct {
    {%- for propertyName, property := range properties -%}
	{%= GoName(propertyName) %} {%= PropertyType(resource, property) %} `json:"{%s= GoVarName2(propertyName) %},omitempty"`
	{%- endfor -%}
}

{%- for propertyName, property := range properties -%}
func (s *{%s typeName %}) Get{%= GoName(propertyName) %}() {%= PropertyType(resource, property) %} {
	return s.{%= GoName(propertyName) %}
}
{%- endfor -%}

{% if annotations.Get(annotated, annotations.SelfContainedProperty) != "" %}
func (s *{%s typeName %}) MarshalJSON() ([]byte, error) {
    return json.Marshal(s.{%= GoName(annotations.Get(annotated, annotations.SelfContainedProperty)) %})
}

func (s *{%s typeName %}) UnmarshalJSON(data []byte) error {
   s.{%= GoName(annotations.Get(annotated, annotations.SelfContainedProperty)) %} = make(unstructured.Unstructured)

   return json.Unmarshal(data, &s.{%= GoName(annotations.Get(annotated, annotations.SelfContainedProperty))%})
}
{% endif %}

{% endfunc %}