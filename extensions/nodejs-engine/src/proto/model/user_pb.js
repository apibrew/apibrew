// source: model/user.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {missingRequire} reports error on implicit type usages.
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!
/* eslint-disable */
// @ts-nocheck

var jspb = require('google-protobuf');
var goog = jspb;
var global =
    (typeof globalThis !== 'undefined' && globalThis) ||
    (typeof window !== 'undefined' && window) ||
    (typeof global !== 'undefined' && global) ||
    (typeof self !== 'undefined' && self) ||
    (function () { return this; }).call(null) ||
    Function('return this')();

var google_protobuf_struct_pb = require('google-protobuf/google/protobuf/struct_pb.js');
goog.object.extend(proto, google_protobuf_struct_pb);
var model_audit_pb = require('../model/audit_pb.js');
goog.object.extend(proto, model_audit_pb);
var model_common_pb = require('../model/common_pb.js');
goog.object.extend(proto, model_common_pb);
var model_security_pb = require('../model/security_pb.js');
goog.object.extend(proto, model_security_pb);
var model_annotations_pb = require('../model/annotations_pb.js');
goog.object.extend(proto, model_annotations_pb);
goog.exportSymbol('proto.model.User', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.model.User = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.model.User, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.model.User.displayName = 'proto.model.User';
}



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.model.User.prototype.toObject = function(opt_includeInstance) {
  return proto.model.User.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.model.User} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.model.User.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, ""),
    username: jspb.Message.getFieldWithDefault(msg, 3, ""),
    password: jspb.Message.getFieldWithDefault(msg, 4, ""),
    securitycontext: (f = msg.getSecuritycontext()) && model_security_pb.SecurityContext.toObject(includeInstance, f),
    details: (f = msg.getDetails()) && google_protobuf_struct_pb.Struct.toObject(includeInstance, f),
    signkey: jspb.Message.getFieldWithDefault(msg, 7, ""),
    auditdata: (f = msg.getAuditdata()) && model_audit_pb.AuditData.toObject(includeInstance, f),
    version: jspb.Message.getFieldWithDefault(msg, 102, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.model.User}
 */
proto.model.User.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.model.User;
  return proto.model.User.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.model.User} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.model.User}
 */
proto.model.User.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setId(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setUsername(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setPassword(value);
      break;
    case 5:
      var value = new model_security_pb.SecurityContext;
      reader.readMessage(value,model_security_pb.SecurityContext.deserializeBinaryFromReader);
      msg.setSecuritycontext(value);
      break;
    case 6:
      var value = new google_protobuf_struct_pb.Struct;
      reader.readMessage(value,google_protobuf_struct_pb.Struct.deserializeBinaryFromReader);
      msg.setDetails(value);
      break;
    case 7:
      var value = /** @type {string} */ (reader.readString());
      msg.setSignkey(value);
      break;
    case 101:
      var value = new model_audit_pb.AuditData;
      reader.readMessage(value,model_audit_pb.AuditData.deserializeBinaryFromReader);
      msg.setAuditdata(value);
      break;
    case 102:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setVersion(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.model.User.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.model.User.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.model.User} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.model.User.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getUsername();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getPassword();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getSecuritycontext();
  if (f != null) {
    writer.writeMessage(
      5,
      f,
      model_security_pb.SecurityContext.serializeBinaryToWriter
    );
  }
  f = message.getDetails();
  if (f != null) {
    writer.writeMessage(
      6,
      f,
      google_protobuf_struct_pb.Struct.serializeBinaryToWriter
    );
  }
  f = message.getSignkey();
  if (f.length > 0) {
    writer.writeString(
      7,
      f
    );
  }
  f = message.getAuditdata();
  if (f != null) {
    writer.writeMessage(
      101,
      f,
      model_audit_pb.AuditData.serializeBinaryToWriter
    );
  }
  f = message.getVersion();
  if (f !== 0) {
    writer.writeUint32(
      102,
      f
    );
  }
};


/**
 * optional string id = 1;
 * @return {string}
 */
proto.model.User.prototype.getId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.model.User} returns this
 */
proto.model.User.prototype.setId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string username = 3;
 * @return {string}
 */
proto.model.User.prototype.getUsername = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.model.User} returns this
 */
proto.model.User.prototype.setUsername = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string password = 4;
 * @return {string}
 */
proto.model.User.prototype.getPassword = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.model.User} returns this
 */
proto.model.User.prototype.setPassword = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional SecurityContext securityContext = 5;
 * @return {?proto.model.SecurityContext}
 */
proto.model.User.prototype.getSecuritycontext = function() {
  return /** @type{?proto.model.SecurityContext} */ (
    jspb.Message.getWrapperField(this, model_security_pb.SecurityContext, 5));
};


/**
 * @param {?proto.model.SecurityContext|undefined} value
 * @return {!proto.model.User} returns this
*/
proto.model.User.prototype.setSecuritycontext = function(value) {
  return jspb.Message.setWrapperField(this, 5, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.model.User} returns this
 */
proto.model.User.prototype.clearSecuritycontext = function() {
  return this.setSecuritycontext(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.model.User.prototype.hasSecuritycontext = function() {
  return jspb.Message.getField(this, 5) != null;
};


/**
 * optional google.protobuf.Struct details = 6;
 * @return {?proto.google.protobuf.Struct}
 */
proto.model.User.prototype.getDetails = function() {
  return /** @type{?proto.google.protobuf.Struct} */ (
    jspb.Message.getWrapperField(this, google_protobuf_struct_pb.Struct, 6));
};


/**
 * @param {?proto.google.protobuf.Struct|undefined} value
 * @return {!proto.model.User} returns this
*/
proto.model.User.prototype.setDetails = function(value) {
  return jspb.Message.setWrapperField(this, 6, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.model.User} returns this
 */
proto.model.User.prototype.clearDetails = function() {
  return this.setDetails(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.model.User.prototype.hasDetails = function() {
  return jspb.Message.getField(this, 6) != null;
};


/**
 * optional string signKey = 7;
 * @return {string}
 */
proto.model.User.prototype.getSignkey = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 7, ""));
};


/**
 * @param {string} value
 * @return {!proto.model.User} returns this
 */
proto.model.User.prototype.setSignkey = function(value) {
  return jspb.Message.setProto3StringField(this, 7, value);
};


/**
 * optional AuditData auditData = 101;
 * @return {?proto.model.AuditData}
 */
proto.model.User.prototype.getAuditdata = function() {
  return /** @type{?proto.model.AuditData} */ (
    jspb.Message.getWrapperField(this, model_audit_pb.AuditData, 101));
};


/**
 * @param {?proto.model.AuditData|undefined} value
 * @return {!proto.model.User} returns this
*/
proto.model.User.prototype.setAuditdata = function(value) {
  return jspb.Message.setWrapperField(this, 101, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.model.User} returns this
 */
proto.model.User.prototype.clearAuditdata = function() {
  return this.setAuditdata(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.model.User.prototype.hasAuditdata = function() {
  return jspb.Message.getField(this, 101) != null;
};


/**
 * optional uint32 version = 102;
 * @return {number}
 */
proto.model.User.prototype.getVersion = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 102, 0));
};


/**
 * @param {number} value
 * @return {!proto.model.User} returns this
 */
proto.model.User.prototype.setVersion = function(value) {
  return jspb.Message.setProto3IntField(this, 102, value);
};


goog.object.extend(exports, proto.model);
