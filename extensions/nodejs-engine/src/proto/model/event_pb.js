// source: model/event.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {missingRequire} reports error on implicit type usages.
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!
/* eslint-disable */
// @ts-nocheck

var jspb = require('google-protobuf');
var goog = jspb;
var global =
    (typeof globalThis !== 'undefined' && globalThis) ||
    (typeof window !== 'undefined' && window) ||
    (typeof global !== 'undefined' && global) ||
    (typeof self !== 'undefined' && self) ||
    (function () { return this; }).call(null) ||
    Function('return this')();

var model_resource_pb = require('../model/resource_pb.js');
goog.object.extend(proto, model_resource_pb);
var model_record_pb = require('../model/record_pb.js');
goog.object.extend(proto, model_record_pb);
var model_query_pb = require('../model/query_pb.js');
goog.object.extend(proto, model_query_pb);
var google_protobuf_timestamp_pb = require('google-protobuf/google/protobuf/timestamp_pb.js');
goog.object.extend(proto, google_protobuf_timestamp_pb);
goog.exportSymbol('proto.model.Event', null, global);
goog.exportSymbol('proto.model.Event.Action', null, global);
goog.exportSymbol('proto.model.Event.RecordSearchParams', null, global);
goog.exportSymbol('proto.model.EventSelector', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.model.Event = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.model.Event.repeatedFields_, null);
};
goog.inherits(proto.model.Event, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.model.Event.displayName = 'proto.model.Event';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.model.Event.RecordSearchParams = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.model.Event.RecordSearchParams.repeatedFields_, null);
};
goog.inherits(proto.model.Event.RecordSearchParams, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.model.Event.RecordSearchParams.displayName = 'proto.model.Event.RecordSearchParams';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.model.EventSelector = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.model.EventSelector.repeatedFields_, null);
};
goog.inherits(proto.model.EventSelector, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.model.EventSelector.displayName = 'proto.model.EventSelector';
}

/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.model.Event.repeatedFields_ = [6,7];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.model.Event.prototype.toObject = function(opt_includeInstance) {
  return proto.model.Event.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.model.Event} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.model.Event.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, ""),
    action: jspb.Message.getFieldWithDefault(msg, 2, 0),
    actionsummary: jspb.Message.getFieldWithDefault(msg, 3, ""),
    actiondescription: jspb.Message.getFieldWithDefault(msg, 4, ""),
    resource: (f = msg.getResource()) && model_resource_pb.Resource.toObject(includeInstance, f),
    recordsList: jspb.Message.toObjectList(msg.getRecordsList(),
    model_record_pb.Record.toObject, includeInstance),
    idsList: (f = jspb.Message.getRepeatedField(msg, 7)) == null ? undefined : f,
    recordsearchparams: (f = msg.getRecordsearchparams()) && proto.model.Event.RecordSearchParams.toObject(includeInstance, f),
    finalizes: jspb.Message.getBooleanFieldWithDefault(msg, 9, false),
    sync: jspb.Message.getBooleanFieldWithDefault(msg, 10, false),
    time: (f = msg.getTime()) && google_protobuf_timestamp_pb.Timestamp.toObject(includeInstance, f),
    annotationsMap: (f = msg.getAnnotationsMap()) ? f.toObject(includeInstance, undefined) : []
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.model.Event}
 */
proto.model.Event.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.model.Event;
  return proto.model.Event.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.model.Event} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.model.Event}
 */
proto.model.Event.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setId(value);
      break;
    case 2:
      var value = /** @type {!proto.model.Event.Action} */ (reader.readEnum());
      msg.setAction(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setActionsummary(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setActiondescription(value);
      break;
    case 5:
      var value = new model_resource_pb.Resource;
      reader.readMessage(value,model_resource_pb.Resource.deserializeBinaryFromReader);
      msg.setResource(value);
      break;
    case 6:
      var value = new model_record_pb.Record;
      reader.readMessage(value,model_record_pb.Record.deserializeBinaryFromReader);
      msg.addRecords(value);
      break;
    case 7:
      var value = /** @type {string} */ (reader.readString());
      msg.addIds(value);
      break;
    case 8:
      var value = new proto.model.Event.RecordSearchParams;
      reader.readMessage(value,proto.model.Event.RecordSearchParams.deserializeBinaryFromReader);
      msg.setRecordsearchparams(value);
      break;
    case 9:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setFinalizes(value);
      break;
    case 10:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setSync(value);
      break;
    case 11:
      var value = new google_protobuf_timestamp_pb.Timestamp;
      reader.readMessage(value,google_protobuf_timestamp_pb.Timestamp.deserializeBinaryFromReader);
      msg.setTime(value);
      break;
    case 103:
      var value = msg.getAnnotationsMap();
      reader.readMessage(value, function(message, reader) {
        jspb.Map.deserializeBinary(message, reader, jspb.BinaryReader.prototype.readString, jspb.BinaryReader.prototype.readString, null, "", "");
         });
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.model.Event.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.model.Event.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.model.Event} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.model.Event.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getAction();
  if (f !== 0.0) {
    writer.writeEnum(
      2,
      f
    );
  }
  f = message.getActionsummary();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getActiondescription();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getResource();
  if (f != null) {
    writer.writeMessage(
      5,
      f,
      model_resource_pb.Resource.serializeBinaryToWriter
    );
  }
  f = message.getRecordsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      6,
      f,
      model_record_pb.Record.serializeBinaryToWriter
    );
  }
  f = message.getIdsList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      7,
      f
    );
  }
  f = message.getRecordsearchparams();
  if (f != null) {
    writer.writeMessage(
      8,
      f,
      proto.model.Event.RecordSearchParams.serializeBinaryToWriter
    );
  }
  f = message.getFinalizes();
  if (f) {
    writer.writeBool(
      9,
      f
    );
  }
  f = message.getSync();
  if (f) {
    writer.writeBool(
      10,
      f
    );
  }
  f = message.getTime();
  if (f != null) {
    writer.writeMessage(
      11,
      f,
      google_protobuf_timestamp_pb.Timestamp.serializeBinaryToWriter
    );
  }
  f = message.getAnnotationsMap(true);
  if (f && f.getLength() > 0) {
    f.serializeBinary(103, writer, jspb.BinaryWriter.prototype.writeString, jspb.BinaryWriter.prototype.writeString);
  }
};


/**
 * @enum {number}
 */
proto.model.Event.Action = {
  CREATE: 0,
  UPDATE: 1,
  DELETE: 2,
  GET: 3,
  LIST: 4,
  OPERATE: 5
};


/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.model.Event.RecordSearchParams.repeatedFields_ = [8];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.model.Event.RecordSearchParams.prototype.toObject = function(opt_includeInstance) {
  return proto.model.Event.RecordSearchParams.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.model.Event.RecordSearchParams} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.model.Event.RecordSearchParams.toObject = function(includeInstance, msg) {
  var f, obj = {
    query: (f = msg.getQuery()) && model_query_pb.BooleanExpression.toObject(includeInstance, f),
    limit: jspb.Message.getFieldWithDefault(msg, 5, 0),
    offset: jspb.Message.getFieldWithDefault(msg, 6, 0),
    resolvereferencesList: (f = jspb.Message.getRepeatedField(msg, 8)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.model.Event.RecordSearchParams}
 */
proto.model.Event.RecordSearchParams.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.model.Event.RecordSearchParams;
  return proto.model.Event.RecordSearchParams.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.model.Event.RecordSearchParams} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.model.Event.RecordSearchParams}
 */
proto.model.Event.RecordSearchParams.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 4:
      var value = new model_query_pb.BooleanExpression;
      reader.readMessage(value,model_query_pb.BooleanExpression.deserializeBinaryFromReader);
      msg.setQuery(value);
      break;
    case 5:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setLimit(value);
      break;
    case 6:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setOffset(value);
      break;
    case 8:
      var value = /** @type {string} */ (reader.readString());
      msg.addResolvereferences(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.model.Event.RecordSearchParams.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.model.Event.RecordSearchParams.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.model.Event.RecordSearchParams} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.model.Event.RecordSearchParams.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getQuery();
  if (f != null) {
    writer.writeMessage(
      4,
      f,
      model_query_pb.BooleanExpression.serializeBinaryToWriter
    );
  }
  f = message.getLimit();
  if (f !== 0) {
    writer.writeUint32(
      5,
      f
    );
  }
  f = message.getOffset();
  if (f !== 0) {
    writer.writeUint64(
      6,
      f
    );
  }
  f = message.getResolvereferencesList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      8,
      f
    );
  }
};


/**
 * optional BooleanExpression query = 4;
 * @return {?proto.model.BooleanExpression}
 */
proto.model.Event.RecordSearchParams.prototype.getQuery = function() {
  return /** @type{?proto.model.BooleanExpression} */ (
    jspb.Message.getWrapperField(this, model_query_pb.BooleanExpression, 4));
};


/**
 * @param {?proto.model.BooleanExpression|undefined} value
 * @return {!proto.model.Event.RecordSearchParams} returns this
*/
proto.model.Event.RecordSearchParams.prototype.setQuery = function(value) {
  return jspb.Message.setWrapperField(this, 4, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.model.Event.RecordSearchParams} returns this
 */
proto.model.Event.RecordSearchParams.prototype.clearQuery = function() {
  return this.setQuery(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.model.Event.RecordSearchParams.prototype.hasQuery = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional uint32 limit = 5;
 * @return {number}
 */
proto.model.Event.RecordSearchParams.prototype.getLimit = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 5, 0));
};


/**
 * @param {number} value
 * @return {!proto.model.Event.RecordSearchParams} returns this
 */
proto.model.Event.RecordSearchParams.prototype.setLimit = function(value) {
  return jspb.Message.setProto3IntField(this, 5, value);
};


/**
 * optional uint64 offset = 6;
 * @return {number}
 */
proto.model.Event.RecordSearchParams.prototype.getOffset = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 6, 0));
};


/**
 * @param {number} value
 * @return {!proto.model.Event.RecordSearchParams} returns this
 */
proto.model.Event.RecordSearchParams.prototype.setOffset = function(value) {
  return jspb.Message.setProto3IntField(this, 6, value);
};


/**
 * repeated string resolveReferences = 8;
 * @return {!Array<string>}
 */
proto.model.Event.RecordSearchParams.prototype.getResolvereferencesList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 8));
};


/**
 * @param {!Array<string>} value
 * @return {!proto.model.Event.RecordSearchParams} returns this
 */
proto.model.Event.RecordSearchParams.prototype.setResolvereferencesList = function(value) {
  return jspb.Message.setField(this, 8, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.model.Event.RecordSearchParams} returns this
 */
proto.model.Event.RecordSearchParams.prototype.addResolvereferences = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 8, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.model.Event.RecordSearchParams} returns this
 */
proto.model.Event.RecordSearchParams.prototype.clearResolvereferencesList = function() {
  return this.setResolvereferencesList([]);
};


/**
 * optional string id = 1;
 * @return {string}
 */
proto.model.Event.prototype.getId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.model.Event} returns this
 */
proto.model.Event.prototype.setId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional Action action = 2;
 * @return {!proto.model.Event.Action}
 */
proto.model.Event.prototype.getAction = function() {
  return /** @type {!proto.model.Event.Action} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {!proto.model.Event.Action} value
 * @return {!proto.model.Event} returns this
 */
proto.model.Event.prototype.setAction = function(value) {
  return jspb.Message.setProto3EnumField(this, 2, value);
};


/**
 * optional string actionSummary = 3;
 * @return {string}
 */
proto.model.Event.prototype.getActionsummary = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.model.Event} returns this
 */
proto.model.Event.prototype.setActionsummary = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string actionDescription = 4;
 * @return {string}
 */
proto.model.Event.prototype.getActiondescription = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.model.Event} returns this
 */
proto.model.Event.prototype.setActiondescription = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional Resource resource = 5;
 * @return {?proto.model.Resource}
 */
proto.model.Event.prototype.getResource = function() {
  return /** @type{?proto.model.Resource} */ (
    jspb.Message.getWrapperField(this, model_resource_pb.Resource, 5));
};


/**
 * @param {?proto.model.Resource|undefined} value
 * @return {!proto.model.Event} returns this
*/
proto.model.Event.prototype.setResource = function(value) {
  return jspb.Message.setWrapperField(this, 5, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.model.Event} returns this
 */
proto.model.Event.prototype.clearResource = function() {
  return this.setResource(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.model.Event.prototype.hasResource = function() {
  return jspb.Message.getField(this, 5) != null;
};


/**
 * repeated Record records = 6;
 * @return {!Array<!proto.model.Record>}
 */
proto.model.Event.prototype.getRecordsList = function() {
  return /** @type{!Array<!proto.model.Record>} */ (
    jspb.Message.getRepeatedWrapperField(this, model_record_pb.Record, 6));
};


/**
 * @param {!Array<!proto.model.Record>} value
 * @return {!proto.model.Event} returns this
*/
proto.model.Event.prototype.setRecordsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 6, value);
};


/**
 * @param {!proto.model.Record=} opt_value
 * @param {number=} opt_index
 * @return {!proto.model.Record}
 */
proto.model.Event.prototype.addRecords = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 6, opt_value, proto.model.Record, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.model.Event} returns this
 */
proto.model.Event.prototype.clearRecordsList = function() {
  return this.setRecordsList([]);
};


/**
 * repeated string ids = 7;
 * @return {!Array<string>}
 */
proto.model.Event.prototype.getIdsList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 7));
};


/**
 * @param {!Array<string>} value
 * @return {!proto.model.Event} returns this
 */
proto.model.Event.prototype.setIdsList = function(value) {
  return jspb.Message.setField(this, 7, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.model.Event} returns this
 */
proto.model.Event.prototype.addIds = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 7, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.model.Event} returns this
 */
proto.model.Event.prototype.clearIdsList = function() {
  return this.setIdsList([]);
};


/**
 * optional RecordSearchParams recordSearchParams = 8;
 * @return {?proto.model.Event.RecordSearchParams}
 */
proto.model.Event.prototype.getRecordsearchparams = function() {
  return /** @type{?proto.model.Event.RecordSearchParams} */ (
    jspb.Message.getWrapperField(this, proto.model.Event.RecordSearchParams, 8));
};


/**
 * @param {?proto.model.Event.RecordSearchParams|undefined} value
 * @return {!proto.model.Event} returns this
*/
proto.model.Event.prototype.setRecordsearchparams = function(value) {
  return jspb.Message.setWrapperField(this, 8, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.model.Event} returns this
 */
proto.model.Event.prototype.clearRecordsearchparams = function() {
  return this.setRecordsearchparams(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.model.Event.prototype.hasRecordsearchparams = function() {
  return jspb.Message.getField(this, 8) != null;
};


/**
 * optional bool finalizes = 9;
 * @return {boolean}
 */
proto.model.Event.prototype.getFinalizes = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 9, false));
};


/**
 * @param {boolean} value
 * @return {!proto.model.Event} returns this
 */
proto.model.Event.prototype.setFinalizes = function(value) {
  return jspb.Message.setProto3BooleanField(this, 9, value);
};


/**
 * optional bool sync = 10;
 * @return {boolean}
 */
proto.model.Event.prototype.getSync = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 10, false));
};


/**
 * @param {boolean} value
 * @return {!proto.model.Event} returns this
 */
proto.model.Event.prototype.setSync = function(value) {
  return jspb.Message.setProto3BooleanField(this, 10, value);
};


/**
 * optional google.protobuf.Timestamp time = 11;
 * @return {?proto.google.protobuf.Timestamp}
 */
proto.model.Event.prototype.getTime = function() {
  return /** @type{?proto.google.protobuf.Timestamp} */ (
    jspb.Message.getWrapperField(this, google_protobuf_timestamp_pb.Timestamp, 11));
};


/**
 * @param {?proto.google.protobuf.Timestamp|undefined} value
 * @return {!proto.model.Event} returns this
*/
proto.model.Event.prototype.setTime = function(value) {
  return jspb.Message.setWrapperField(this, 11, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.model.Event} returns this
 */
proto.model.Event.prototype.clearTime = function() {
  return this.setTime(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.model.Event.prototype.hasTime = function() {
  return jspb.Message.getField(this, 11) != null;
};


/**
 * map<string, string> annotations = 103;
 * @param {boolean=} opt_noLazyCreate Do not create the map if
 * empty, instead returning `undefined`
 * @return {!jspb.Map<string,string>}
 */
proto.model.Event.prototype.getAnnotationsMap = function(opt_noLazyCreate) {
  return /** @type {!jspb.Map<string,string>} */ (
      jspb.Message.getMapField(this, 103, opt_noLazyCreate,
      null));
};


/**
 * Clears values from the map. The map will be non-null.
 * @return {!proto.model.Event} returns this
 */
proto.model.Event.prototype.clearAnnotationsMap = function() {
  this.getAnnotationsMap().clear();
  return this;
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.model.EventSelector.repeatedFields_ = [1,3,4,7];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.model.EventSelector.prototype.toObject = function(opt_includeInstance) {
  return proto.model.EventSelector.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.model.EventSelector} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.model.EventSelector.toObject = function(includeInstance, msg) {
  var f, obj = {
    actionsList: (f = jspb.Message.getRepeatedField(msg, 1)) == null ? undefined : f,
    recordselector: (f = msg.getRecordselector()) && model_query_pb.BooleanExpression.toObject(includeInstance, f),
    namespacesList: (f = jspb.Message.getRepeatedField(msg, 3)) == null ? undefined : f,
    resourcesList: (f = jspb.Message.getRepeatedField(msg, 4)) == null ? undefined : f,
    idsList: (f = jspb.Message.getRepeatedField(msg, 7)) == null ? undefined : f,
    annotationsMap: (f = msg.getAnnotationsMap()) ? f.toObject(includeInstance, undefined) : []
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.model.EventSelector}
 */
proto.model.EventSelector.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.model.EventSelector;
  return proto.model.EventSelector.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.model.EventSelector} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.model.EventSelector}
 */
proto.model.EventSelector.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var values = /** @type {!Array<!proto.model.Event.Action>} */ (reader.isDelimited() ? reader.readPackedEnum() : [reader.readEnum()]);
      for (var i = 0; i < values.length; i++) {
        msg.addActions(values[i]);
      }
      break;
    case 2:
      var value = new model_query_pb.BooleanExpression;
      reader.readMessage(value,model_query_pb.BooleanExpression.deserializeBinaryFromReader);
      msg.setRecordselector(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.addNamespaces(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.addResources(value);
      break;
    case 7:
      var value = /** @type {string} */ (reader.readString());
      msg.addIds(value);
      break;
    case 103:
      var value = msg.getAnnotationsMap();
      reader.readMessage(value, function(message, reader) {
        jspb.Map.deserializeBinary(message, reader, jspb.BinaryReader.prototype.readString, jspb.BinaryReader.prototype.readString, null, "", "");
         });
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.model.EventSelector.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.model.EventSelector.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.model.EventSelector} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.model.EventSelector.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getActionsList();
  if (f.length > 0) {
    writer.writePackedEnum(
      1,
      f
    );
  }
  f = message.getRecordselector();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      model_query_pb.BooleanExpression.serializeBinaryToWriter
    );
  }
  f = message.getNamespacesList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      3,
      f
    );
  }
  f = message.getResourcesList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      4,
      f
    );
  }
  f = message.getIdsList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      7,
      f
    );
  }
  f = message.getAnnotationsMap(true);
  if (f && f.getLength() > 0) {
    f.serializeBinary(103, writer, jspb.BinaryWriter.prototype.writeString, jspb.BinaryWriter.prototype.writeString);
  }
};


/**
 * repeated Event.Action actions = 1;
 * @return {!Array<!proto.model.Event.Action>}
 */
proto.model.EventSelector.prototype.getActionsList = function() {
  return /** @type {!Array<!proto.model.Event.Action>} */ (jspb.Message.getRepeatedField(this, 1));
};


/**
 * @param {!Array<!proto.model.Event.Action>} value
 * @return {!proto.model.EventSelector} returns this
 */
proto.model.EventSelector.prototype.setActionsList = function(value) {
  return jspb.Message.setField(this, 1, value || []);
};


/**
 * @param {!proto.model.Event.Action} value
 * @param {number=} opt_index
 * @return {!proto.model.EventSelector} returns this
 */
proto.model.EventSelector.prototype.addActions = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 1, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.model.EventSelector} returns this
 */
proto.model.EventSelector.prototype.clearActionsList = function() {
  return this.setActionsList([]);
};


/**
 * optional BooleanExpression recordSelector = 2;
 * @return {?proto.model.BooleanExpression}
 */
proto.model.EventSelector.prototype.getRecordselector = function() {
  return /** @type{?proto.model.BooleanExpression} */ (
    jspb.Message.getWrapperField(this, model_query_pb.BooleanExpression, 2));
};


/**
 * @param {?proto.model.BooleanExpression|undefined} value
 * @return {!proto.model.EventSelector} returns this
*/
proto.model.EventSelector.prototype.setRecordselector = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.model.EventSelector} returns this
 */
proto.model.EventSelector.prototype.clearRecordselector = function() {
  return this.setRecordselector(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.model.EventSelector.prototype.hasRecordselector = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * repeated string namespaces = 3;
 * @return {!Array<string>}
 */
proto.model.EventSelector.prototype.getNamespacesList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 3));
};


/**
 * @param {!Array<string>} value
 * @return {!proto.model.EventSelector} returns this
 */
proto.model.EventSelector.prototype.setNamespacesList = function(value) {
  return jspb.Message.setField(this, 3, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.model.EventSelector} returns this
 */
proto.model.EventSelector.prototype.addNamespaces = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 3, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.model.EventSelector} returns this
 */
proto.model.EventSelector.prototype.clearNamespacesList = function() {
  return this.setNamespacesList([]);
};


/**
 * repeated string resources = 4;
 * @return {!Array<string>}
 */
proto.model.EventSelector.prototype.getResourcesList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 4));
};


/**
 * @param {!Array<string>} value
 * @return {!proto.model.EventSelector} returns this
 */
proto.model.EventSelector.prototype.setResourcesList = function(value) {
  return jspb.Message.setField(this, 4, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.model.EventSelector} returns this
 */
proto.model.EventSelector.prototype.addResources = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 4, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.model.EventSelector} returns this
 */
proto.model.EventSelector.prototype.clearResourcesList = function() {
  return this.setResourcesList([]);
};


/**
 * repeated string ids = 7;
 * @return {!Array<string>}
 */
proto.model.EventSelector.prototype.getIdsList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 7));
};


/**
 * @param {!Array<string>} value
 * @return {!proto.model.EventSelector} returns this
 */
proto.model.EventSelector.prototype.setIdsList = function(value) {
  return jspb.Message.setField(this, 7, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.model.EventSelector} returns this
 */
proto.model.EventSelector.prototype.addIds = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 7, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.model.EventSelector} returns this
 */
proto.model.EventSelector.prototype.clearIdsList = function() {
  return this.setIdsList([]);
};


/**
 * map<string, string> annotations = 103;
 * @param {boolean=} opt_noLazyCreate Do not create the map if
 * empty, instead returning `undefined`
 * @return {!jspb.Map<string,string>}
 */
proto.model.EventSelector.prototype.getAnnotationsMap = function(opt_noLazyCreate) {
  return /** @type {!jspb.Map<string,string>} */ (
      jspb.Message.getMapField(this, 103, opt_noLazyCreate,
      null));
};


/**
 * Clears values from the map. The map will be non-null.
 * @return {!proto.model.EventSelector} returns this
 */
proto.model.EventSelector.prototype.clearAnnotationsMap = function() {
  this.getAnnotationsMap().clear();
  return this;
};


goog.object.extend(exports, proto.model);
