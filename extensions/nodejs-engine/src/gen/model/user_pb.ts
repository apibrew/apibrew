// @generated by protoc-gen-es v1.2.1 with parameter "target=ts"
// @generated from file model/user.proto (package model, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import type { BinaryReadOptions, FieldList, JsonReadOptions, JsonValue, PartialMessage, PlainMessage } from "@bufbuild/protobuf";
import { Message, proto3, Struct } from "@bufbuild/protobuf";
import { SecurityContext } from "./security_pb";
import { AuditData } from "./audit_pb";

/**
 * @generated from message model.User
 */
export class User extends Message<User> {
  /**
   * @generated from field: string id = 1;
   */
  id = "";

  /**
   * principal
   *
   * @generated from field: string username = 3;
   */
  username = "";

  /**
   * @generated from field: string password = 4;
   */
  password = "";

  /**
   * @generated from field: model.SecurityContext securityContext = 5;
   */
  securityContext?: SecurityContext;

  /**
   * @generated from field: google.protobuf.Struct details = 6;
   */
  details?: Struct;

  /**
   * rsa pub key to create tokens
   *
   * @generated from field: string signKey = 7;
   */
  signKey = "";

  /**
   * @generated from field: model.AuditData auditData = 101;
   */
  auditData?: AuditData;

  /**
   * @generated from field: uint32 version = 102;
   */
  version = 0;

  constructor(data?: PartialMessage<User>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "model.User";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 3, name: "username", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 4, name: "password", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 5, name: "securityContext", kind: "message", T: SecurityContext },
    { no: 6, name: "details", kind: "message", T: Struct },
    { no: 7, name: "signKey", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 101, name: "auditData", kind: "message", T: AuditData },
    { no: 102, name: "version", kind: "scalar", T: 13 /* ScalarType.UINT32 */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): User {
    return new User().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): User {
    return new User().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): User {
    return new User().fromJsonString(jsonString, options);
  }

  static equals(a: User | PlainMessage<User> | undefined, b: User | PlainMessage<User> | undefined): boolean {
    return proto3.util.equals(User, a, b);
  }
}

