// @generated by protoc-gen-es v1.2.1 with parameter "target=ts"
// @generated from file model/common.proto (package model, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import type { BinaryReadOptions, FieldList, JsonReadOptions, JsonValue, PartialMessage, PlainMessage } from "@bufbuild/protobuf";
import { Any, Message, proto3 } from "@bufbuild/protobuf";

/**
 * @generated from message model.MapAnyWrap
 */
export class MapAnyWrap extends Message<MapAnyWrap> {
  /**
   * @generated from field: map<string, google.protobuf.Any> content = 2;
   */
  content: { [key: string]: Any } = {};

  constructor(data?: PartialMessage<MapAnyWrap>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "model.MapAnyWrap";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 2, name: "content", kind: "map", K: 9 /* ScalarType.STRING */, V: {kind: "message", T: Any} },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): MapAnyWrap {
    return new MapAnyWrap().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): MapAnyWrap {
    return new MapAnyWrap().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): MapAnyWrap {
    return new MapAnyWrap().fromJsonString(jsonString, options);
  }

  static equals(a: MapAnyWrap | PlainMessage<MapAnyWrap> | undefined, b: MapAnyWrap | PlainMessage<MapAnyWrap> | undefined): boolean {
    return proto3.util.equals(MapAnyWrap, a, b);
  }
}

