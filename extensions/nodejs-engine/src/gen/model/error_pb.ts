// @generated by protoc-gen-es v1.2.1 with parameter "target=ts"
// @generated from file model/error.proto (package model, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import type { BinaryReadOptions, FieldList, JsonReadOptions, JsonValue, PartialMessage, PlainMessage } from "@bufbuild/protobuf";
import { Message, proto3, Value } from "@bufbuild/protobuf";

/**
 * @generated from enum model.ErrorCode
 */
export enum ErrorCode {
  /**
   * @generated from enum value: UNKNOWN_ERROR = 0;
   */
  UNKNOWN_ERROR = 0,

  /**
   * @generated from enum value: RECORD_NOT_FOUND = 1;
   */
  RECORD_NOT_FOUND = 1,

  /**
   * @generated from enum value: UNABLE_TO_LOCATE_PRIMARY_KEY = 2;
   */
  UNABLE_TO_LOCATE_PRIMARY_KEY = 2,

  /**
   * @generated from enum value: INTERNAL_ERROR = 3;
   */
  INTERNAL_ERROR = 3,

  /**
   * @generated from enum value: PROPERTY_NOT_FOUND = 4;
   */
  PROPERTY_NOT_FOUND = 4,

  /**
   * @generated from enum value: RECORD_VALIDATION_ERROR = 5;
   */
  RECORD_VALIDATION_ERROR = 5,

  /**
   * @generated from enum value: RESOURCE_VALIDATION_ERROR = 13;
   */
  RESOURCE_VALIDATION_ERROR = 13,

  /**
   * @generated from enum value: AUTHENTICATION_FAILED = 6;
   */
  AUTHENTICATION_FAILED = 6,

  /**
   * @generated from enum value: ALREADY_EXISTS = 7;
   */
  ALREADY_EXISTS = 7,

  /**
   * @generated from enum value: ACCESS_DENIED = 8;
   */
  ACCESS_DENIED = 8,

  /**
   * @generated from enum value: BACKEND_ERROR = 9;
   */
  BACKEND_ERROR = 9,

  /**
   * @generated from enum value: UNIQUE_VIOLATION = 10;
   */
  UNIQUE_VIOLATION = 10,

  /**
   * @generated from enum value: REFERENCE_VIOLATION = 11;
   */
  REFERENCE_VIOLATION = 11,

  /**
   * @generated from enum value: RESOURCE_NOT_FOUND = 12;
   */
  RESOURCE_NOT_FOUND = 12,

  /**
   * @generated from enum value: UNSUPPORTED_OPERATION = 14;
   */
  UNSUPPORTED_OPERATION = 14,

  /**
   * @generated from enum value: EXTERNAL_BACKEND_COMMUNICATION_ERROR = 15;
   */
  EXTERNAL_BACKEND_COMMUNICATION_ERROR = 15,

  /**
   * @generated from enum value: EXTERNAL_BACKEND_ERROR = 16;
   */
  EXTERNAL_BACKEND_ERROR = 16,
}
// Retrieve enum metadata with: proto3.getEnumType(ErrorCode)
proto3.util.setEnumType(ErrorCode, "model.ErrorCode", [
  { no: 0, name: "UNKNOWN_ERROR" },
  { no: 1, name: "RECORD_NOT_FOUND" },
  { no: 2, name: "UNABLE_TO_LOCATE_PRIMARY_KEY" },
  { no: 3, name: "INTERNAL_ERROR" },
  { no: 4, name: "PROPERTY_NOT_FOUND" },
  { no: 5, name: "RECORD_VALIDATION_ERROR" },
  { no: 13, name: "RESOURCE_VALIDATION_ERROR" },
  { no: 6, name: "AUTHENTICATION_FAILED" },
  { no: 7, name: "ALREADY_EXISTS" },
  { no: 8, name: "ACCESS_DENIED" },
  { no: 9, name: "BACKEND_ERROR" },
  { no: 10, name: "UNIQUE_VIOLATION" },
  { no: 11, name: "REFERENCE_VIOLATION" },
  { no: 12, name: "RESOURCE_NOT_FOUND" },
  { no: 14, name: "UNSUPPORTED_OPERATION" },
  { no: 15, name: "EXTERNAL_BACKEND_COMMUNICATION_ERROR" },
  { no: 16, name: "EXTERNAL_BACKEND_ERROR" },
]);

/**
 * @generated from message model.ErrorField
 */
export class ErrorField extends Message<ErrorField> {
  /**
   * @generated from field: string recordId = 1;
   */
  recordId = "";

  /**
   * @generated from field: string property = 2;
   */
  property = "";

  /**
   * @generated from field: string message = 3;
   */
  message = "";

  /**
   * @generated from field: google.protobuf.Value value = 4;
   */
  value?: Value;

  constructor(data?: PartialMessage<ErrorField>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "model.ErrorField";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "recordId", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "property", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 3, name: "message", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 4, name: "value", kind: "message", T: Value },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ErrorField {
    return new ErrorField().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ErrorField {
    return new ErrorField().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ErrorField {
    return new ErrorField().fromJsonString(jsonString, options);
  }

  static equals(a: ErrorField | PlainMessage<ErrorField> | undefined, b: ErrorField | PlainMessage<ErrorField> | undefined): boolean {
    return proto3.util.equals(ErrorField, a, b);
  }
}

/**
 * @generated from message model.Error
 */
export class Error extends Message<Error> {
  /**
   * @generated from field: model.ErrorCode code = 1;
   */
  code = ErrorCode.UNKNOWN_ERROR;

  /**
   * @generated from field: string message = 2;
   */
  message = "";

  /**
   * @generated from field: repeated model.ErrorField fields = 3;
   */
  fields: ErrorField[] = [];

  constructor(data?: PartialMessage<Error>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "model.Error";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "code", kind: "enum", T: proto3.getEnumType(ErrorCode) },
    { no: 2, name: "message", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 3, name: "fields", kind: "message", T: ErrorField, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): Error {
    return new Error().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): Error {
    return new Error().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): Error {
    return new Error().fromJsonString(jsonString, options);
  }

  static equals(a: Error | PlainMessage<Error> | undefined, b: Error | PlainMessage<Error> | undefined): boolean {
    return proto3.util.equals(Error, a, b);
  }
}

