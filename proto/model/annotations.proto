syntax = "proto3";

package model;

option go_package = "github.com/apibrew/apibrew/pkg/model";

import "google/protobuf/descriptor.proto";
import "model/security.proto";
import "model/resource.proto";

// This option lets the proto compiler generate Java code inside the package
// name (see below) instead of inside an outer class. It creates a simpler
// developer experience by reducing one-level of name nesting and be
// consistent with most programming languages that don't support outer classes.
option java_multiple_files = true;

// The Java outer classname should be the filename in UpperCamelCase. This
// class is only used to hold proto descriptor, so developers don't need to
// work with it directly.
option java_outer_classname = "AnnotationsProto";

// The Java package name must be proto package name with proper prefix.
option java_package = "org.openapi_v3";

// A reasonable prefix for the Objective-C symbols generated from the package.
// It should at a minimum be 3 characters long, all uppercase, and convention
// is to use an abbreviation of the package name. Something short, but
// hopefully unique enough to not conflict with things that may come along in
// the future. 'GPB' is reserved for the protocol buffer implementation itself.
option objc_class_prefix = "OAS";

message Annotation {
  string name = 1;
  string value = 2;
}

extend google.protobuf.MessageOptions {
  string resourceName = 1012; // create only?
  string resourceNamespace = 1003; // create only?

  string resourceDataSource = 1004;
  string resourceCatalog = 1005;
  string resourceEntity = 1006;

  repeated ResourceIndex resourceIndexes = 1007;
  SecurityContext resourceSecurityContext = 1008;
  bool resourceVirtual = 1009;
  bool resourceImmutable = 1010;
  uint32 resourceVersion = 1011;
  repeated Annotation resourceAnnotations = 1013;
  bool securityContextDisallowAll = 1014;
}

extend google.protobuf.FieldOptions {
  string propertyMapping = 2001;
  bool propertyPrimary = 2002;
  uint32 propertyLength = 2003;
  bool propertyUnique = 2004;
  SecurityContext propertySecurityContext = 2005;
  Reference propertyReference = 2006;
  bool propertyImmutable = 2008;
  ResourceProperty.Type propertyType = 2009;
  repeated Annotation propertyAnnotations = 2010;
}
