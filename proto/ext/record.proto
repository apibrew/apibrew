syntax = "proto3";

package ext;

option go_package = "github.com/tislib/data-handler/pkg/ext";

import 'model/record.proto';
import 'model/resource.proto';
import 'model/query.proto';
import 'model/error.proto';
import "google/api/annotations.proto";
import 'google/protobuf/struct.proto';
import 'ext/params.proto';

service RecordExtensionService {
  rpc BeforeList (BeforeListRecordRequest) returns (BeforeListRecordResponse) {}
  rpc List (ListRecordRequest) returns (ListRecordResponse) {}
  rpc AfterList (AfterListRecordRequest) returns (AfterListRecordResponse) {}

  rpc BeforeCreate (BeforeCreateRecordRequest) returns (BeforeCreateRecordResponse) {}
  rpc Create (CreateRecordRequest) returns (CreateRecordResponse) {}
  rpc AfterCreate (AfterCreateRecordRequest) returns (AfterCreateRecordResponse) {}

  rpc BeforeUpdate (BeforeUpdateRecordRequest) returns (BeforeUpdateRecordResponse) {}
  rpc Update (UpdateRecordRequest) returns (UpdateRecordResponse) {}
  rpc AfterUpdate (AfterUpdateRecordRequest) returns (AfterUpdateRecordResponse) {}

  rpc BeforeDelete (BeforeDeleteRecordRequest) returns (BeforeDeleteRecordResponse) {}
  rpc Delete (DeleteRecordRequest) returns (DeleteRecordResponse) {}
  rpc AfterDelete (AfterDeleteRecordRequest) returns (AfterDeleteRecordResponse) {}

  rpc BeforeGet (BeforeGetRecordRequest) returns (BeforeGetRecordResponse) {}
  rpc Get (GetRecordRequest) returns (GetRecordResponse) {}
  rpc AfterGet (AfterGetRecordRequest) returns (AfterGetRecordResponse) {}
}

message BeforeListRecordRequest {
  model.Resource resource = 1;
  ext.RecordListParams params = 2;
}

message BeforeListRecordResponse {
}

message AfterListRecordRequest {
  model.Resource resource = 1;
  ext.RecordListParams params = 2;
  repeated model.Record records = 3;
  uint32 total = 4;
}

message AfterListRecordResponse {

}

message ListRecordRequest {
  model.Resource resource = 1;
  ext.RecordListParams params = 2;
}

message ListRecordResponse {
  repeated model.Record records = 3;
  uint32 total = 4;
}


message BeforeCreateRecordRequest {
  model.Resource resource = 1;
  ext.RecordCreateParams params = 2;
}

message BeforeCreateRecordResponse {
}

message AfterCreateRecordRequest {
  model.Resource resource = 1;
  ext.RecordCreateParams params = 2;
  repeated model.Record records = 3;
}

message AfterCreateRecordResponse {

}

message CreateRecordRequest {
  model.Resource resource = 1;
  ext.RecordCreateParams params = 2;
}

message CreateRecordResponse {
  repeated model.Record records = 1;
  repeated bool inserted = 2;
}


message BeforeUpdateRecordRequest {
  model.Resource resource = 1;
  ext.RecordUpdateParams params = 2;
}

message BeforeUpdateRecordResponse {
}

message AfterUpdateRecordRequest {
  model.Resource resource = 1;
  ext.RecordUpdateParams params = 2;
  repeated model.Record records = 3;
}

message AfterUpdateRecordResponse {

}

message UpdateRecordRequest {
  model.Resource resource = 1;
  ext.RecordUpdateParams params = 2;
}

message UpdateRecordResponse {
  repeated model.Record records = 3;
}


message BeforeDeleteRecordRequest {
  model.Resource resource = 1;
  ext.RecordDeleteParams params = 2;
}

message BeforeDeleteRecordResponse {
}

message AfterDeleteRecordRequest {
  model.Resource resource = 1;
  ext.RecordDeleteParams params = 2;
}

message AfterDeleteRecordResponse {

}

message DeleteRecordRequest {
  model.Resource resource = 1;
  ext.RecordDeleteParams params = 2;
}

message DeleteRecordResponse {
}


message BeforeGetRecordRequest {
  model.Resource resource = 1;
  string id = 2;
}

message BeforeGetRecordResponse {
}

message AfterGetRecordRequest {
  model.Resource resource = 1;
  string id = 2;
  model.Record record = 3;
}

message AfterGetRecordResponse {

}

message GetRecordRequest {
  model.Resource resource = 1;
  string id = 2;
}

message GetRecordResponse {
  model.Record record = 1;
}
