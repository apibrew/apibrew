syntax = "proto3";

package rest;

option go_package = "github.com/tislib/apibrew/pkg/stub/rest";

import 'model/record.proto';
import 'model/query.proto';
import 'model/error.proto';
import "google/api/annotations.proto";
import 'google/protobuf/struct.proto';

// Record service is an abstract service for records of all resources. You can do CRUD like operations with Record service
service Record {
  rpc Create (CreateRecordRequest) returns (CreateRecordResponse) {
    option (google.api.http) = {
      post: "/records/{namespace}/{resource}",
      body: "properties"
      response_body: "properties"
    };
  }

  rpc Update (UpdateRecordRequest) returns (UpdateRecordResponse) {
    option (google.api.http) = {
      put: "/records/{namespace}/{resource}/{id}"
      body: "properties"
      response_body: "properties"
    };
  }

  rpc Apply (ApplyRecordRequest) returns (ApplyRecordResponse) {
    option (google.api.http) = {
      patch: "/records/{namespace}/{resource}"
      body: "properties"
      response_body: "properties"
    };
  }

  rpc Delete (DeleteRecordRequest)   returns (DeleteRecordResponse) {
    option (google.api.http) = {
      delete: "/records/{namespace}/{resource}/{id}"
    };
  }
}

message CreateRecordRequest {
  string token = 1;
  string namespace = 2;
  string resource = 3;
  map<string, google.protobuf.Value> properties = 5;

  map<string, string> annotations = 103;
}

message CreateRecordResponse {
  string id = 4; // id; read only
  map<string, google.protobuf.Value> properties = 5;
}

message UpdateRecordRequest {
  string token = 1;
  string namespace = 2;
  string resource = 3;
  string id = 4; // id; read only
  map<string, google.protobuf.Value> properties = 5;
  bool checkVersion = 6;

  map<string, string> annotations = 103;
}

message UpdateRecordResponse {
  map<string, google.protobuf.Value> properties = 5;
}

message ApplyRecordRequest {
  string token = 1;
  string namespace = 2;
  string resource = 3;
  string id = 4; // id; read only
  map<string, google.protobuf.Value> properties = 5;
  bool checkVersion = 6;

  map<string, string> annotations = 103;
}

message ApplyRecordResponse {
  map<string, google.protobuf.Value> properties = 5;
}

message DeleteRecordRequest {
  string token = 1;
  string namespace = 2;
  string resource = 3;
  string id = 4; // Rest Only

  map<string, string> annotations = 103;
}

message DeleteRecordResponse {
}
