syntax = "proto3";

package cluster;

option go_package = "github.com/tislib/apibrew/pkg/stub";

import 'model/node.proto';
import 'model/error.proto';
import 'model/resource.proto';

// Node Service is for managing Cluster Nodes, This service is only available on the cluster server
service Node {
  rpc Create(CreateNodeRequest) returns (CreateNodeResponse) {}
  rpc List(ListNodeRequest) returns (ListNodeResponse) {}
  rpc Update(UpdateNodeRequest) returns (UpdateNodeResponse) {}
  rpc Delete(DeleteNodeRequest) returns (DeleteNodeResponse) {}
  rpc Get(GetNodeRequest) returns (GetNodeResponse) {}
  /*
  Status will return connection status of data source
   */
  rpc NodeStatus(NodeStatusRequest) returns (NodeStatusResponse) {}
  rpc InstallNewNode(InstallNewNodeRequest) returns (InstallNewNodeResponse) {}
  rpc UninstallNode(UninstallNodeRequest) returns (UninstallNodeResponse) {}
}

message InstallNewNodeRequest {
  string token = 1;
}

message InstallNewNodeResponse {
  model.Node node = 1;
}

message UninstallNodeRequest {
  string token = 1;
}

message UninstallNodeResponse {
  model.Node node = 1;
}

message NodeStatusRequest {
  string token = 1;
  string id = 2;
}

message NodeStatusResponse {
  bool connectionAlreadyInitiated = 1;
  bool testConnection = 2;
}

message ListNodeRequest {
  string token = 1;
}

message ListNodeResponse {
  repeated model.Node content = 2;
}

message CreateNodeRequest {
  string token = 1;
  repeated model.Node Nodes = 2;
}

message CreateNodeResponse {
  repeated model.Node Nodes = 1;
}

message UpdateNodeRequest {
  string token = 1;
  repeated model.Node Nodes = 2;
}

message UpdateNodeResponse {
  repeated model.Node Nodes = 1;
}

message DeleteNodeRequest {
  string token = 1;
  repeated string ids = 2;
}

message DeleteNodeResponse {
}

message GetNodeRequest {
  string token = 1;
  string id = 2;
}

message GetNodeResponse {
  model.Node Node = 1;
}
