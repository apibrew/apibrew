syntax = "proto3";

package stub;

option go_package = "github.com/apibrew/apibrew/pkg/stub";

import 'model/error.proto';
import 'model/resource.proto';
import 'model/data-source.proto';

// DataSource Service is for managing data sources
service DataSource {
  /*
  Status will return connection status of data source
   */
  rpc Status(StatusRequest) returns (StatusResponse) {}
  /*
  List entities will return all entities from data source
   */
  rpc ListEntities(ListEntitiesRequest) returns (ListEntitiesResponse) {}
  /*
  PrepareResourceFromEntity will return resource from data source based on entity.
  It is for database first approach. If you already have an entity/table on data source and your want to create resource based on it, you can call this endpoint to do it.
   */
  rpc PrepareResourceFromEntity(PrepareResourceFromEntityRequest) returns (PrepareResourceFromEntityResponse) {}
}

message PrepareResourceFromEntityRequest {
  string token = 1;
  // data source id, required, It is for specifying that which database the operation will be performed
  string id = 2;
  // catalog is optional, if not provided, default catalog will be used, catalog is like schema in database
  string catalog = 3;
  // entity is required, it is like table in database, collection on mongodb, etc.
  string entity = 4;
}

message PrepareResourceFromEntityResponse {
  model.Resource resource = 1;
}

message StatusRequest {
  string token = 1;
  string id = 2;
}

message StatusResponse {
  bool connectionAlreadyInitiated = 1;
  bool testConnection = 2;
}

message ListEntitiesRequest {
  string token = 1;
  string id = 2;
}

message ListEntitiesResponse {
  repeated model.DataSourceCatalog catalogs = 1;
}
