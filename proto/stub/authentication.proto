syntax = "proto3";

package stub;

option go_package = "github.com/tislib/data-handler/pkg/stub";

import 'model/error.proto';
import 'model/token.proto';
import "google/api/annotations.proto";
import "gnostic/openapi/v3/annotations.proto";

// Authentication Service is for authentication related operations
service Authentication {
  rpc Authenticate(AuthenticationRequest) returns(AuthenticationResponse) {
    option (gnostic.openapi.v3.operation) = {
      tags : "Authentication",
      summary: "Authentication with username/password"
      description: "Authentication with username/password and create new token"
      operation_id: "authenticationAuthenticate"
    };
    option (google.api.http) = {
      post: "/authentication/token",
      body: "*"
    };
  }
  rpc RenewToken(RenewTokenRequest) returns(RenewTokenResponse) {
    option (gnostic.openapi.v3.operation) = {
      tags : "Authentication",
      summary: "Renew token"
      description: "Renew token with existing token"
      operation_id: "authenticationRenewToken"
    };
    option (google.api.http) = {
      put: "/authentication/token",
      body: "*"
    };
  }
}

message AuthenticationRequest {
  string username = 1;
  string password = 2;

  option (gnostic.openapi.v3.schema) = {description: "Token Lifespan"};
  model.TokenTerm term = 3;
}

message AuthenticationResponse {
  model.Token token = 1;
}

message RenewTokenRequest {
  string token = 1;

  model.TokenTerm term = 2;
}

message RenewTokenResponse {
  model.Token token = 1;
}
