syntax = "proto3";

package stub;

option go_package = "github.com/tislib/apibrew/pkg/stub";

import 'model/namespace.proto';
import 'model/error.proto';
import "google/api/annotations.proto";
import "gnostic/openapi/v3/annotations.proto";

// Namespace Service is for managing namespaces
service Namespace {
  rpc Create(CreateNamespaceRequest) returns (CreateNamespaceResponse) {
    option (google.api.http) = {
      post: "/system/namespaces",
      body: "*"
    };
  }
  rpc List(ListNamespaceRequest) returns (ListNamespaceResponse) {
    option (google.api.http) = {
      get: "/system/namespaces",
    };
  }
  rpc Update(UpdateNamespaceRequest) returns (UpdateNamespaceResponse) {
    option (google.api.http) = {
      put: "/system/namespaces",
      body: "*"
    };
  }
  rpc Delete(DeleteNamespaceRequest) returns (DeleteNamespaceResponse) {
    option (google.api.http) = {
      delete: "/system/namespaces",
      body: "*"
    };
  }
  rpc Get(GetNamespaceRequest) returns (GetNamespaceResponse) {
    option (google.api.http) = {
      get: "/system/namespaces/{id}",
    };
  }
}

message ListNamespaceRequest {
  string token = 1;
}

message ListNamespaceResponse {
  repeated model.Namespace content = 2;
}

message CreateNamespaceRequest {
  string token = 1;
  repeated model.Namespace Namespaces = 2;
}

message CreateNamespaceResponse {
  repeated model.Namespace Namespaces = 1;
}

message UpdateNamespaceRequest {
  string token = 1;
  repeated model.Namespace Namespaces = 2;
}

message UpdateNamespaceResponse {
  repeated model.Namespace Namespaces = 1;
}

message DeleteNamespaceRequest {
  string token = 1;
  repeated string ids = 2;
}

message DeleteNamespaceResponse {
  repeated model.Namespace Namespaces = 1;
}

message GetNamespaceRequest {
  string token = 1;
  string id = 2;
}

message GetNamespaceResponse {
  model.Namespace Namespace = 1;
}