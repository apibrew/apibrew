syntax = "proto3";

package stub;

option go_package = "github.com/tislib/data-handler/pkg/stub";
import "google/api/annotations.proto";
import 'model/query.proto';
import 'model/extension.proto';

// Extension Service is for managing extensions
service Extension {
  rpc List (ListExtensionRequest) returns (ListExtensionResponse) {
    option (google.api.http) = {
      get: "/system/extensions"
    };
  }
  rpc Get (GetExtensionRequest) returns (GetExtensionResponse) {
    option (google.api.http) = {
      get: "/system/extensions/{id}",
    };
  }
  rpc Create (CreateExtensionRequest) returns (CreateExtensionResponse) {
    option (google.api.http) = {
      post: "/system/extensions",
      body: "*"
    };
  }
  rpc Update (UpdateExtensionRequest) returns (UpdateExtensionResponse) {
    option (google.api.http) = {
      put: "/system/extensions",
      body: "*"
    };
  }
  rpc Delete (DeleteExtensionRequest) returns (DeleteExtensionResponse) {
    option (google.api.http) = {
      delete: "/system/extensions",
      body: "*"
    };
  }
}

message ListExtensionRequest {
  string token = 1;
}

message ListExtensionResponse {
  repeated model.Extension content = 1;
}

message GetExtensionRequest {
  string token = 1;
  string id = 2;
}

message GetExtensionResponse {
  model.Extension extension = 1;
}

message CreateExtensionRequest {
  string token = 1;
  repeated model.Extension extensions = 2;
}

message CreateExtensionResponse {
  repeated model.Extension extensions = 1;
}

message UpdateExtensionRequest {
  string token = 1;
  repeated model.Extension extensions = 2;
}

message UpdateExtensionResponse {
  repeated model.Extension extensions = 1;
}

message DeleteExtensionRequest {
  string token = 1;
  repeated string ids = 2;
}

message DeleteExtensionResponse {
}
